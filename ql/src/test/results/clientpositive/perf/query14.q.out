Warning: Shuffle Join MERGEJOIN[909][tables = [$hdt$_2, $hdt$_3]] in Stage 'Reducer 18' is a cross product
Warning: Shuffle Join MERGEJOIN[910][tables = [$hdt$_2, $hdt$_3, $hdt$_1]] in Stage 'Reducer 19' is a cross product
Warning: Shuffle Join MERGEJOIN[905][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[906][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 6' is a cross product
Warning: Shuffle Join MERGEJOIN[907][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 13' is a cross product
Warning: Shuffle Join MERGEJOIN[908][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 14' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 1 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 100 <- Map 102 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)
Reducer 12 <- Union 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE), Reducer 30 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE), Reducer 55 (SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 15 <- Map 1 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 17 <- Union 16 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE), Reducer 33 (SIMPLE_EDGE)
Reducer 19 <- Reducer 18 (SIMPLE_EDGE), Reducer 58 (SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 21 <- Map 20 (SIMPLE_EDGE), Map 24 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 22 <- Map 20 (SIMPLE_EDGE), Map 24 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 23 <- Map 20 (SIMPLE_EDGE), Map 24 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 25 <- Map 24 (SIMPLE_EDGE), Map 46 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 27 <- Union 26 (SIMPLE_EDGE)
Reducer 28 <- Map 24 (SIMPLE_EDGE), Map 46 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 30 <- Union 29 (SIMPLE_EDGE)
Reducer 31 <- Map 24 (SIMPLE_EDGE), Map 46 (SIMPLE_EDGE), Union 32 (CONTAINS)
Reducer 33 <- Union 32 (SIMPLE_EDGE)
Reducer 35 <- Map 34 (SIMPLE_EDGE), Map 38 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 36 <- Map 34 (SIMPLE_EDGE), Map 38 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 37 <- Map 34 (SIMPLE_EDGE), Map 38 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 39 <- Map 38 (SIMPLE_EDGE), Map 47 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE)
Reducer 40 <- Map 38 (SIMPLE_EDGE), Map 47 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 41 <- Map 38 (SIMPLE_EDGE), Map 47 (SIMPLE_EDGE), Union 32 (CONTAINS)
Reducer 43 <- Map 42 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE), Union 26 (CONTAINS)
Reducer 44 <- Map 42 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE), Union 29 (CONTAINS)
Reducer 45 <- Map 42 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE), Union 32 (CONTAINS)
Reducer 49 <- Map 48 (SIMPLE_EDGE), Map 52 (SIMPLE_EDGE)
Reducer 5 <- Reducer 27 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 50 <- Map 59 (SIMPLE_EDGE), Reducer 49 (SIMPLE_EDGE), Reducer 61 (SIMPLE_EDGE)
Reducer 51 <- Reducer 50 (SIMPLE_EDGE)
Reducer 53 <- Map 103 (SIMPLE_EDGE), Map 52 (SIMPLE_EDGE)
Reducer 54 <- Map 59 (SIMPLE_EDGE), Reducer 53 (SIMPLE_EDGE), Reducer 71 (SIMPLE_EDGE)
Reducer 55 <- Reducer 54 (SIMPLE_EDGE)
Reducer 56 <- Map 104 (SIMPLE_EDGE), Map 52 (SIMPLE_EDGE)
Reducer 57 <- Map 59 (SIMPLE_EDGE), Reducer 56 (SIMPLE_EDGE), Reducer 81 (SIMPLE_EDGE)
Reducer 58 <- Reducer 57 (SIMPLE_EDGE)
Reducer 6 <- Reducer 5 (SIMPLE_EDGE), Reducer 51 (SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 60 <- Map 59 (SIMPLE_EDGE), Reducer 65 (SIMPLE_EDGE)
Reducer 61 <- Reducer 60 (SIMPLE_EDGE)
Reducer 62 <- Map 59 (SIMPLE_EDGE), Reducer 91 (SIMPLE_EDGE)
Reducer 63 <- Reducer 62 (SIMPLE_EDGE), Union 64 (CONTAINS)
Reducer 65 <- Union 64 (SIMPLE_EDGE)
Reducer 66 <- Map 59 (SIMPLE_EDGE), Reducer 95 (SIMPLE_EDGE)
Reducer 67 <- Reducer 66 (SIMPLE_EDGE), Union 64 (CONTAINS)
Reducer 68 <- Map 59 (SIMPLE_EDGE), Reducer 96 (SIMPLE_EDGE)
Reducer 69 <- Reducer 68 (SIMPLE_EDGE), Union 64 (CONTAINS)
Reducer 70 <- Map 59 (SIMPLE_EDGE), Reducer 75 (SIMPLE_EDGE)
Reducer 71 <- Reducer 70 (SIMPLE_EDGE)
Reducer 72 <- Map 59 (SIMPLE_EDGE), Reducer 92 (SIMPLE_EDGE)
Reducer 73 <- Reducer 72 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 75 <- Union 74 (SIMPLE_EDGE)
Reducer 76 <- Map 59 (SIMPLE_EDGE), Reducer 97 (SIMPLE_EDGE)
Reducer 77 <- Reducer 76 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 78 <- Map 59 (SIMPLE_EDGE), Reducer 98 (SIMPLE_EDGE)
Reducer 79 <- Reducer 78 (SIMPLE_EDGE), Union 74 (CONTAINS)
Reducer 8 <- Union 7 (SIMPLE_EDGE)
Reducer 80 <- Map 59 (SIMPLE_EDGE), Reducer 85 (SIMPLE_EDGE)
Reducer 81 <- Reducer 80 (SIMPLE_EDGE)
Reducer 82 <- Map 59 (SIMPLE_EDGE), Reducer 93 (SIMPLE_EDGE)
Reducer 83 <- Reducer 82 (SIMPLE_EDGE), Union 84 (CONTAINS)
Reducer 85 <- Union 84 (SIMPLE_EDGE)
Reducer 86 <- Map 59 (SIMPLE_EDGE), Reducer 99 (SIMPLE_EDGE)
Reducer 87 <- Reducer 86 (SIMPLE_EDGE), Union 84 (CONTAINS)
Reducer 88 <- Map 59 (SIMPLE_EDGE), Reducer 100 (SIMPLE_EDGE)
Reducer 89 <- Reducer 88 (SIMPLE_EDGE), Union 84 (CONTAINS)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)
Reducer 91 <- Map 90 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)
Reducer 92 <- Map 90 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)
Reducer 93 <- Map 90 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)
Reducer 95 <- Map 101 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)
Reducer 96 <- Map 102 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)
Reducer 97 <- Map 101 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)
Reducer 98 <- Map 102 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)
Reducer 99 <- Map 101 (SIMPLE_EDGE), Map 94 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 9
      File Output Operator [FS_589]
        Limit [LIM_588] (rows=100 width=406)
          Number of rows:100
          Select Operator [SEL_587] (rows=1016388080 width=406)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 8 [SIMPLE_EDGE]
            SHUFFLE [RS_586]
              Select Operator [SEL_585] (rows=1016388080 width=406)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_584] (rows=1016388080 width=406)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 7 [SIMPLE_EDGE]
                  <-Reducer 14 [CONTAINS]
                    Reduce Output Operator [RS_583]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_582] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_385] (rows=116155905 width=433)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_384] (rows=116155905 width=433)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_908] (rows=348467716 width=433)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 13 [SIMPLE_EDGE]
                              SHUFFLE [RS_381]
                                Merge Join Operator [MERGEJOIN_907] (rows=1 width=297)
                                  Conds:(Left Outer),Output:["_col1"]
                                <-Reducer 12 [SIMPLE_EDGE]
                                  SHUFFLE [RS_378]
                                    Select Operator [SEL_236] (rows=1 width=8)
                                      Filter Operator [FIL_235] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_233] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_228] (rows=1 width=8)
                                            Group By Operator [GBY_227] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 11 [SIMPLE_EDGE]
                                              <-Reducer 10 [CONTAINS]
                                                Reduce Output Operator [RS_226]
                                                  Group By Operator [GBY_225] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_224] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_202] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_875] (rows=633595212 width=88)
                                                          Conds:RS_199._col0=RS_200._col0(Inner),Output:["_col1"]
                                                        <-Map 94 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_200]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_98] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_802] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                TableScan [TS_96] (rows=73049 width=1119)
                                                                  default@date_dim,d1,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                        <-Map 1 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_199]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_2] (rows=575995635 width=88)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_785] (rows=575995635 width=88)
                                                                predicate:ss_sold_date_sk is not null
                                                                TableScan [TS_0] (rows=575995635 width=88)
                                                                  default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity"]
                                              <-Reducer 22 [CONTAINS]
                                                Reduce Output Operator [RS_226]
                                                  Group By Operator [GBY_225] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_224] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_212] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_876] (rows=316788826 width=135)
                                                          Conds:RS_209._col0=RS_210._col0(Inner),Output:["_col1"]
                                                        <-Map 24 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_210]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_15] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_788] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                TableScan [TS_13] (rows=73049 width=1119)
                                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                        <-Map 20 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_209]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_12] (rows=287989836 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_787] (rows=287989836 width=135)
                                                                predicate:cs_sold_date_sk is not null
                                                                TableScan [TS_10] (rows=287989836 width=135)
                                                                  default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity"]
                                              <-Reducer 36 [CONTAINS]
                                                Reduce Output Operator [RS_226]
                                                  Group By Operator [GBY_225] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_224] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_223] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_877] (rows=158402938 width=135)
                                                          Conds:RS_220._col0=RS_221._col0(Inner),Output:["_col1"]
                                                        <-Map 38 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_221]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_26] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_790] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                TableScan [TS_24] (rows=73049 width=1119)
                                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                        <-Map 34 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_220]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_23] (rows=144002668 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_789] (rows=144002668 width=135)
                                                                predicate:ws_sold_date_sk is not null
                                                                TableScan [TS_21] (rows=144002668 width=135)
                                                                  default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity"]
                                <-Reducer 30 [SIMPLE_EDGE]
                                  SHUFFLE [RS_379]
                                    Group By Operator [GBY_272] (rows=1 width=288)
                                      Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                    <-Union 29 [SIMPLE_EDGE]
                                      <-Reducer 28 [CONTAINS]
                                        Reduce Output Operator [RS_271]
                                          Group By Operator [GBY_270] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_268] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_256] (rows=316788826 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_879] (rows=316788826 width=135)
                                                  Conds:RS_253._col0=RS_254._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 24 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_254]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_15]
                                                <-Map 46 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_253]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_56] (rows=287989836 width=135)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_793] (rows=287989836 width=135)
                                                        predicate:cs_sold_date_sk is not null
                                                        TableScan [TS_54] (rows=287989836 width=135)
                                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                      <-Reducer 40 [CONTAINS]
                                        Reduce Output Operator [RS_271]
                                          Group By Operator [GBY_270] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_268] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_267] (rows=158402938 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_880] (rows=158402938 width=135)
                                                  Conds:RS_264._col0=RS_265._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 38 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_265]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_26]
                                                <-Map 47 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_264]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_67] (rows=144002668 width=135)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_795] (rows=144002668 width=135)
                                                        predicate:ws_sold_date_sk is not null
                                                        TableScan [TS_65] (rows=144002668 width=135)
                                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                                      <-Reducer 44 [CONTAINS]
                                        Reduce Output Operator [RS_271]
                                          Group By Operator [GBY_270] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_268] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_246] (rows=633595212 width=88)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_878] (rows=633595212 width=88)
                                                  Conds:RS_243._col0=RS_244._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 94 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_244]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_98]
                                                <-Map 42 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_243]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_46] (rows=575995635 width=88)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_791] (rows=575995635 width=88)
                                                        predicate:ss_sold_date_sk is not null
                                                        TableScan [TS_44] (rows=575995635 width=88)
                                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                            <-Reducer 55 [SIMPLE_EDGE]
                              SHUFFLE [RS_382]
                                Group By Operator [GBY_376] (rows=348467716 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 54 [SIMPLE_EDGE]
                                  SHUFFLE [RS_375]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_374] (rows=696935432 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_372] (rows=696935432 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_889] (rows=696935432 width=135)
                                          Conds:RS_368._col1=RS_369._col0(Inner),RS_368._col1=RS_370._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 59 [SIMPLE_EDGE]
                                          SHUFFLE [RS_369]
                                            PartitionCols:_col0
                                            Select Operator [SEL_282] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_824] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                TableScan [TS_90] (rows=462000 width=1436)
                                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                        <-Reducer 53 [SIMPLE_EDGE]
                                          SHUFFLE [RS_368]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_881] (rows=316788826 width=135)
                                              Conds:RS_365._col0=RS_366._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 52 [SIMPLE_EDGE]
                                              SHUFFLE [RS_366]
                                                PartitionCols:_col0
                                                Select Operator [SEL_86] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_798] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                    TableScan [TS_84] (rows=73049 width=1119)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                            <-Map 103 [SIMPLE_EDGE]
                                              SHUFFLE [RS_365]
                                                PartitionCols:_col0
                                                Select Operator [SEL_276] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_822] (rows=287989836 width=135)
                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                    TableScan [TS_274] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                                        <-Reducer 71 [SIMPLE_EDGE]
                                          SHUFFLE [RS_370]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_363] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 70 [SIMPLE_EDGE]
                                              SHUFFLE [RS_362]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_361] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_888] (rows=508200 width=1436)
                                                    Conds:RS_357._col1, _col2, _col3=RS_358._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 59 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_357]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_285] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_825] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_90]
                                                  <-Reducer 75 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_358]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_356] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_355] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_354] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 74 [SIMPLE_EDGE]
                                                            <-Reducer 73 [CONTAINS]
                                                              Reduce Output Operator [RS_353]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_352] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_305] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 72 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_304]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_303] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_301] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_883] (rows=696954748 width=88)
                                                                            Conds:RS_298._col1=RS_299._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_299]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_294] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_828] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_90]
                                                                          <-Reducer 92 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_298]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_882] (rows=633595212 width=88)
                                                                                Conds:RS_295._col0=RS_296._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_296]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 90 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_295]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_95] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_801] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                      TableScan [TS_93] (rows=575995635 width=88)
                                                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                            <-Reducer 77 [CONTAINS]
                                                              Reduce Output Operator [RS_353]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_352] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_326] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 76 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_325]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_324] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_322] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_885] (rows=348467716 width=135)
                                                                            Conds:RS_319._col1=RS_320._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_320]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_315] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_831] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_90]
                                                                          <-Reducer 97 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_319]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_884] (rows=316788826 width=135)
                                                                                Conds:RS_316._col0=RS_317._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_317]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 101 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_316]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_116] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_804] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                      TableScan [TS_114] (rows=287989836 width=135)
                                                                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                            <-Reducer 79 [CONTAINS]
                                                              Reduce Output Operator [RS_353]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_352] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_348] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 78 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_347]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_346] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_344] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_887] (rows=174243235 width=135)
                                                                            Conds:RS_341._col1=RS_342._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_342]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_337] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_834] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_90]
                                                                          <-Reducer 98 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_341]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_886] (rows=158402938 width=135)
                                                                                Conds:RS_338._col0=RS_339._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_339]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 102 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_338]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_138] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_807] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                      TableScan [TS_136] (rows=144002668 width=135)
                                                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk"]
                  <-Reducer 19 [CONTAINS]
                    Reduce Output Operator [RS_583]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_582] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_579] (rows=58081078 width=433)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_578] (rows=58081078 width=433)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_910] (rows=174243235 width=433)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 18 [SIMPLE_EDGE]
                              SHUFFLE [RS_575]
                                Merge Join Operator [MERGEJOIN_909] (rows=1 width=297)
                                  Conds:(Left Outer),Output:["_col1"]
                                <-Reducer 17 [SIMPLE_EDGE]
                                  SHUFFLE [RS_572]
                                    Select Operator [SEL_430] (rows=1 width=8)
                                      Filter Operator [FIL_429] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_427] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_422] (rows=1 width=8)
                                            Group By Operator [GBY_421] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 16 [SIMPLE_EDGE]
                                              <-Reducer 15 [CONTAINS]
                                                Reduce Output Operator [RS_420]
                                                  Group By Operator [GBY_419] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_418] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_396] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_890] (rows=633595212 width=88)
                                                          Conds:RS_393._col0=RS_394._col0(Inner),Output:["_col1"]
                                                        <-Map 94 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_394]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_98]
                                                        <-Map 1 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_393]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_2]
                                              <-Reducer 23 [CONTAINS]
                                                Reduce Output Operator [RS_420]
                                                  Group By Operator [GBY_419] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_418] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_406] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_891] (rows=316788826 width=135)
                                                          Conds:RS_403._col0=RS_404._col0(Inner),Output:["_col1"]
                                                        <-Map 24 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_404]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_15]
                                                        <-Map 20 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_403]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_12]
                                              <-Reducer 37 [CONTAINS]
                                                Reduce Output Operator [RS_420]
                                                  Group By Operator [GBY_419] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_418] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_417] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_892] (rows=158402938 width=135)
                                                          Conds:RS_414._col0=RS_415._col0(Inner),Output:["_col1"]
                                                        <-Map 38 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_415]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_26]
                                                        <-Map 34 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_414]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_23]
                                <-Reducer 33 [SIMPLE_EDGE]
                                  SHUFFLE [RS_573]
                                    Group By Operator [GBY_466] (rows=1 width=288)
                                      Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                    <-Union 32 [SIMPLE_EDGE]
                                      <-Reducer 31 [CONTAINS]
                                        Reduce Output Operator [RS_465]
                                          Group By Operator [GBY_464] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_462] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_450] (rows=316788826 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_894] (rows=316788826 width=135)
                                                  Conds:RS_447._col0=RS_448._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 24 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_448]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_15]
                                                <-Map 46 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_447]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_56]
                                      <-Reducer 41 [CONTAINS]
                                        Reduce Output Operator [RS_465]
                                          Group By Operator [GBY_464] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_462] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_461] (rows=158402938 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_895] (rows=158402938 width=135)
                                                  Conds:RS_458._col0=RS_459._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 38 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_459]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_26]
                                                <-Map 47 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_458]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_67]
                                      <-Reducer 45 [CONTAINS]
                                        Reduce Output Operator [RS_465]
                                          Group By Operator [GBY_464] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_462] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_440] (rows=633595212 width=88)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_893] (rows=633595212 width=88)
                                                  Conds:RS_437._col0=RS_438._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 94 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_438]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_98]
                                                <-Map 42 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_437]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_46]
                            <-Reducer 58 [SIMPLE_EDGE]
                              SHUFFLE [RS_576]
                                Group By Operator [GBY_570] (rows=174243235 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 57 [SIMPLE_EDGE]
                                  SHUFFLE [RS_569]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_568] (rows=348486471 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_566] (rows=348486471 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_904] (rows=348486471 width=135)
                                          Conds:RS_562._col1=RS_563._col0(Inner),RS_562._col1=RS_564._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 59 [SIMPLE_EDGE]
                                          SHUFFLE [RS_563]
                                            PartitionCols:_col0
                                            Select Operator [SEL_476] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_849] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_90]
                                        <-Reducer 56 [SIMPLE_EDGE]
                                          SHUFFLE [RS_562]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_896] (rows=158402938 width=135)
                                              Conds:RS_559._col0=RS_560._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 52 [SIMPLE_EDGE]
                                              SHUFFLE [RS_560]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_86]
                                            <-Map 104 [SIMPLE_EDGE]
                                              SHUFFLE [RS_559]
                                                PartitionCols:_col0
                                                Select Operator [SEL_470] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_847] (rows=144002668 width=135)
                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_468] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                                        <-Reducer 81 [SIMPLE_EDGE]
                                          SHUFFLE [RS_564]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_557] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 80 [SIMPLE_EDGE]
                                              SHUFFLE [RS_556]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_555] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_903] (rows=508200 width=1436)
                                                    Conds:RS_551._col1, _col2, _col3=RS_552._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 59 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_551]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_479] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_850] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_90]
                                                  <-Reducer 85 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_552]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_550] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_549] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_548] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 84 [SIMPLE_EDGE]
                                                            <-Reducer 83 [CONTAINS]
                                                              Reduce Output Operator [RS_547]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_546] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_499] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 82 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_498]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_497] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_495] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_898] (rows=696954748 width=88)
                                                                            Conds:RS_492._col1=RS_493._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_493]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_488] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_853] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_90]
                                                                          <-Reducer 93 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_492]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_897] (rows=633595212 width=88)
                                                                                Conds:RS_489._col0=RS_490._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_490]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 90 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_489]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_95]
                                                            <-Reducer 87 [CONTAINS]
                                                              Reduce Output Operator [RS_547]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_546] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_520] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 86 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_519]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_518] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_516] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_900] (rows=348467716 width=135)
                                                                            Conds:RS_513._col1=RS_514._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_514]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_509] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_856] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_90]
                                                                          <-Reducer 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_513]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_899] (rows=316788826 width=135)
                                                                                Conds:RS_510._col0=RS_511._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_511]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 101 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_510]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_116]
                                                            <-Reducer 89 [CONTAINS]
                                                              Reduce Output Operator [RS_547]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_546] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_542] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 88 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_541]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_540] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_538] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_902] (rows=174243235 width=135)
                                                                            Conds:RS_535._col1=RS_536._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_536]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_531] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_859] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_90]
                                                                          <-Reducer 100 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_535]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_901] (rows=158402938 width=135)
                                                                                Conds:RS_532._col0=RS_533._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_533]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 102 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_532]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_138]
                  <-Reducer 6 [CONTAINS]
                    Reduce Output Operator [RS_583]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_582] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_192] (rows=232318249 width=386)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_191] (rows=232318249 width=386)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_906] (rows=696954748 width=386)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 5 [SIMPLE_EDGE]
                              SHUFFLE [RS_188]
                                Merge Join Operator [MERGEJOIN_905] (rows=1 width=297)
                                  Conds:(Left Outer),Output:["_col1"]
                                <-Reducer 27 [SIMPLE_EDGE]
                                  SHUFFLE [RS_186]
                                    Group By Operator [GBY_79] (rows=1 width=288)
                                      Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                    <-Union 26 [SIMPLE_EDGE]
                                      <-Reducer 25 [CONTAINS]
                                        Reduce Output Operator [RS_78]
                                          Group By Operator [GBY_77] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_75] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_63] (rows=316788826 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_864] (rows=316788826 width=135)
                                                  Conds:RS_60._col0=RS_61._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 24 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_61]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_15]
                                                <-Map 46 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_60]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_56]
                                      <-Reducer 39 [CONTAINS]
                                        Reduce Output Operator [RS_78]
                                          Group By Operator [GBY_77] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_75] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_74] (rows=158402938 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_865] (rows=158402938 width=135)
                                                  Conds:RS_71._col0=RS_72._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 38 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_72]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_26]
                                                <-Map 47 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_71]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_67]
                                      <-Reducer 43 [CONTAINS]
                                        Reduce Output Operator [RS_78]
                                          Group By Operator [GBY_77] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_75] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_53] (rows=633595212 width=88)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_863] (rows=633595212 width=88)
                                                  Conds:RS_50._col0=RS_51._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 94 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_51]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_98]
                                                <-Map 42 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_50]
                                                    PartitionCols:_col0
                                                     Please refer to the previous Select Operator [SEL_46]
                                <-Reducer 4 [SIMPLE_EDGE]
                                  SHUFFLE [RS_185]
                                    Select Operator [SEL_43] (rows=1 width=8)
                                      Filter Operator [FIL_42] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_40] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_35] (rows=1 width=8)
                                            Group By Operator [GBY_34] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 3 [SIMPLE_EDGE]
                                              <-Reducer 2 [CONTAINS]
                                                Reduce Output Operator [RS_33]
                                                  Group By Operator [GBY_32] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_31] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_9] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_860] (rows=633595212 width=88)
                                                          Conds:RS_6._col0=RS_7._col0(Inner),Output:["_col1"]
                                                        <-Map 94 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_7]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_98]
                                                        <-Map 1 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_6]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_2]
                                              <-Reducer 21 [CONTAINS]
                                                Reduce Output Operator [RS_33]
                                                  Group By Operator [GBY_32] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_31] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_19] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_861] (rows=316788826 width=135)
                                                          Conds:RS_16._col0=RS_17._col0(Inner),Output:["_col1"]
                                                        <-Map 24 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_17]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_15]
                                                        <-Map 20 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_16]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_12]
                                              <-Reducer 35 [CONTAINS]
                                                Reduce Output Operator [RS_33]
                                                  Group By Operator [GBY_32] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_31] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_30] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_862] (rows=158402938 width=135)
                                                          Conds:RS_27._col0=RS_28._col0(Inner),Output:["_col1"]
                                                        <-Map 38 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_28]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_26]
                                                        <-Map 34 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_27]
                                                            PartitionCols:_col0
                                                             Please refer to the previous Select Operator [SEL_23]
                            <-Reducer 51 [SIMPLE_EDGE]
                              SHUFFLE [RS_189]
                                Group By Operator [GBY_183] (rows=696954748 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 50 [SIMPLE_EDGE]
                                  SHUFFLE [RS_182]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_181] (rows=1393909496 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_179] (rows=1393909496 width=88)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_874] (rows=1393909496 width=88)
                                          Conds:RS_175._col1=RS_176._col0(Inner),RS_175._col1=RS_177._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 59 [SIMPLE_EDGE]
                                          SHUFFLE [RS_176]
                                            PartitionCols:_col0
                                            Select Operator [SEL_89] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_799] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_90]
                                        <-Reducer 49 [SIMPLE_EDGE]
                                          SHUFFLE [RS_175]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_866] (rows=633595212 width=88)
                                              Conds:RS_172._col0=RS_173._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 52 [SIMPLE_EDGE]
                                              SHUFFLE [RS_173]
                                                PartitionCols:_col0
                                                 Please refer to the previous Select Operator [SEL_86]
                                            <-Map 48 [SIMPLE_EDGE]
                                              SHUFFLE [RS_172]
                                                PartitionCols:_col0
                                                Select Operator [SEL_83] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_797] (rows=575995635 width=88)
                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                    TableScan [TS_81] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                                        <-Reducer 61 [SIMPLE_EDGE]
                                          SHUFFLE [RS_177]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_170] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 60 [SIMPLE_EDGE]
                                              SHUFFLE [RS_169]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_168] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_873] (rows=508200 width=1436)
                                                    Conds:RS_164._col1, _col2, _col3=RS_165._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 59 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_164]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_92] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_800] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_90]
                                                  <-Reducer 65 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_165]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_163] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_162] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_161] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 64 [SIMPLE_EDGE]
                                                            <-Reducer 63 [CONTAINS]
                                                              Reduce Output Operator [RS_160]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_159] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_112] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 62 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_111]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_110] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_108] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_868] (rows=696954748 width=88)
                                                                            Conds:RS_105._col1=RS_106._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_106]
                                                                              PartitionCols:_col0
                                                                               Please refer to the previous Select Operator [SEL_92]
                                                                          <-Reducer 91 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_105]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_867] (rows=633595212 width=88)
                                                                                Conds:RS_102._col0=RS_103._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_103]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 90 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_102]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_95]
                                                            <-Reducer 67 [CONTAINS]
                                                              Reduce Output Operator [RS_160]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_159] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_133] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 66 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_132]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_131] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_129] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_870] (rows=348467716 width=135)
                                                                            Conds:RS_126._col1=RS_127._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_127]
                                                                              PartitionCols:_col0
                                                                               Please refer to the previous Select Operator [SEL_92]
                                                                          <-Reducer 95 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_126]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_869] (rows=316788826 width=135)
                                                                                Conds:RS_123._col0=RS_124._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_124]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 101 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_123]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_116]
                                                            <-Reducer 69 [CONTAINS]
                                                              Reduce Output Operator [RS_160]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_159] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_155] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 68 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_154]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_153] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_151] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_872] (rows=174243235 width=135)
                                                                            Conds:RS_148._col1=RS_149._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 59 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_149]
                                                                              PartitionCols:_col0
                                                                               Please refer to the previous Select Operator [SEL_92]
                                                                          <-Reducer 96 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_148]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_871] (rows=158402938 width=135)
                                                                                Conds:RS_145._col0=RS_146._col0(Inner),Output:["_col1"]
                                                                              <-Map 94 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_146]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_98]
                                                                              <-Map 102 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_145]
                                                                                  PartitionCols:_col0
                                                                                   Please refer to the previous Select Operator [SEL_138]

