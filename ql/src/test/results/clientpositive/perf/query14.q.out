Warning: Shuffle Join MERGEJOIN[916][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 18' is a cross product
Warning: Shuffle Join MERGEJOIN[917][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 19' is a cross product
Warning: Shuffle Join MERGEJOIN[912][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 5' is a cross product
Warning: Shuffle Join MERGEJOIN[913][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 6' is a cross product
Warning: Shuffle Join MERGEJOIN[914][tables = [$hdt$_1, $hdt$_2]] in Stage 'Reducer 13' is a cross product
Warning: Shuffle Join MERGEJOIN[915][tables = [$hdt$_1, $hdt$_2, $hdt$_0]] in Stage 'Reducer 14' is a cross product
PREHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with  cross_items as
 (select i_item_sk ss_item_sk
 from item,
 (select iss.i_brand_id brand_id
     ,iss.i_class_id class_id
     ,iss.i_category_id category_id
 from store_sales
     ,item iss
     ,date_dim d1
 where ss_item_sk = iss.i_item_sk
   and ss_sold_date_sk = d1.d_date_sk
   and d1.d_year between 1999 AND 1999 + 2
 intersect 
 select ics.i_brand_id
     ,ics.i_class_id
     ,ics.i_category_id
 from catalog_sales
     ,item ics
     ,date_dim d2
 where cs_item_sk = ics.i_item_sk
   and cs_sold_date_sk = d2.d_date_sk
   and d2.d_year between 1999 AND 1999 + 2
 intersect
 select iws.i_brand_id
     ,iws.i_class_id
     ,iws.i_category_id
 from web_sales
     ,item iws
     ,date_dim d3
 where ws_item_sk = iws.i_item_sk
   and ws_sold_date_sk = d3.d_date_sk
   and d3.d_year between 1999 AND 1999 + 2) x
 where i_brand_id = brand_id
      and i_class_id = class_id
      and i_category_id = category_id
),
 avg_sales as
 (select avg(quantity*list_price) average_sales
  from (select ss_quantity quantity
             ,ss_list_price list_price
       from store_sales
           ,date_dim
       where ss_sold_date_sk = d_date_sk
         and d_year between 1999 and 2001 
       union all 
       select cs_quantity quantity 
             ,cs_list_price list_price
       from catalog_sales
           ,date_dim
       where cs_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2 
       union all
       select ws_quantity quantity
             ,ws_list_price list_price
       from web_sales
           ,date_dim
       where ws_sold_date_sk = d_date_sk
         and d_year between 1998 and 1998 + 2) x)
  select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)
 from(
       select 'store' channel, i_brand_id,i_class_id
             ,i_category_id,sum(ss_quantity*ss_list_price) sales
             , count(*) number_sales
       from store_sales
           ,item
           ,date_dim
       where ss_item_sk in (select ss_item_sk from cross_items)
         and ss_item_sk = i_item_sk
         and ss_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)
       union all
       select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales
       from catalog_sales
           ,item
           ,date_dim
       where cs_item_sk in (select ss_item_sk from cross_items)
         and cs_item_sk = i_item_sk
         and cs_sold_date_sk = d_date_sk
         and d_year = 1998+2 
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)
       union all
       select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales
       from web_sales
           ,item
           ,date_dim
       where ws_item_sk in (select ss_item_sk from cross_items)
         and ws_item_sk = i_item_sk
         and ws_sold_date_sk = d_date_sk
         and d_year = 1998+2
         and d_moy = 11
       group by i_brand_id,i_class_id,i_category_id
       having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)
 ) y
 group by rollup (channel, i_brand_id,i_class_id,i_category_id)
 order by channel,i_brand_id,i_class_id,i_category_id
 limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Map 1 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 12 <- Union 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE), Reducer 41 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE), Reducer 50 (SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 15 <- Map 1 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 17 <- Union 16 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE), Reducer 59 (SIMPLE_EDGE)
Reducer 19 <- Reducer 18 (SIMPLE_EDGE), Reducer 68 (SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 21 <- Map 20 (SIMPLE_EDGE), Map 91 (SIMPLE_EDGE), Union 22 (CONTAINS)
Reducer 23 <- Union 22 (SIMPLE_EDGE)
Reducer 24 <- Map 100 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 25 <- Map 99 (SIMPLE_EDGE), Reducer 24 (SIMPLE_EDGE)
Reducer 26 <- Reducer 25 (SIMPLE_EDGE), Union 27 (CONTAINS)
Reducer 28 <- Union 27 (SIMPLE_EDGE)
Reducer 29 <- Map 99 (SIMPLE_EDGE), Reducer 28 (SIMPLE_EDGE)
Reducer 30 <- Reducer 29 (SIMPLE_EDGE)
Reducer 31 <- Map 99 (SIMPLE_EDGE), Reducer 30 (SIMPLE_EDGE), Reducer 95 (SIMPLE_EDGE)
Reducer 32 <- Reducer 31 (SIMPLE_EDGE)
Reducer 33 <- Map 101 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 34 <- Map 99 (SIMPLE_EDGE), Reducer 33 (SIMPLE_EDGE)
Reducer 35 <- Reducer 34 (SIMPLE_EDGE), Union 27 (CONTAINS)
Reducer 36 <- Map 102 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 37 <- Map 99 (SIMPLE_EDGE), Reducer 36 (SIMPLE_EDGE)
Reducer 38 <- Reducer 37 (SIMPLE_EDGE), Union 27 (CONTAINS)
Reducer 39 <- Map 20 (SIMPLE_EDGE), Map 91 (SIMPLE_EDGE), Union 40 (CONTAINS)
Reducer 4 <- Union 3 (SIMPLE_EDGE)
Reducer 41 <- Union 40 (SIMPLE_EDGE)
Reducer 42 <- Map 100 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 43 <- Map 99 (SIMPLE_EDGE), Reducer 42 (SIMPLE_EDGE)
Reducer 44 <- Reducer 43 (SIMPLE_EDGE), Union 45 (CONTAINS)
Reducer 46 <- Union 45 (SIMPLE_EDGE)
Reducer 47 <- Map 99 (SIMPLE_EDGE), Reducer 46 (SIMPLE_EDGE)
Reducer 48 <- Reducer 47 (SIMPLE_EDGE)
Reducer 49 <- Map 99 (SIMPLE_EDGE), Reducer 48 (SIMPLE_EDGE), Reducer 97 (SIMPLE_EDGE)
Reducer 5 <- Reducer 23 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 50 <- Reducer 49 (SIMPLE_EDGE)
Reducer 51 <- Map 101 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 52 <- Map 99 (SIMPLE_EDGE), Reducer 51 (SIMPLE_EDGE)
Reducer 53 <- Reducer 52 (SIMPLE_EDGE), Union 45 (CONTAINS)
Reducer 54 <- Map 102 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 55 <- Map 99 (SIMPLE_EDGE), Reducer 54 (SIMPLE_EDGE)
Reducer 56 <- Reducer 55 (SIMPLE_EDGE), Union 45 (CONTAINS)
Reducer 57 <- Map 20 (SIMPLE_EDGE), Map 91 (SIMPLE_EDGE), Union 58 (CONTAINS)
Reducer 59 <- Union 58 (SIMPLE_EDGE)
Reducer 6 <- Reducer 32 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE), Union 7 (CONTAINS)
Reducer 60 <- Map 100 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 61 <- Map 99 (SIMPLE_EDGE), Reducer 60 (SIMPLE_EDGE)
Reducer 62 <- Reducer 61 (SIMPLE_EDGE), Union 63 (CONTAINS)
Reducer 64 <- Union 63 (SIMPLE_EDGE)
Reducer 65 <- Map 99 (SIMPLE_EDGE), Reducer 64 (SIMPLE_EDGE)
Reducer 66 <- Reducer 65 (SIMPLE_EDGE)
Reducer 67 <- Map 99 (SIMPLE_EDGE), Reducer 66 (SIMPLE_EDGE), Reducer 98 (SIMPLE_EDGE)
Reducer 68 <- Reducer 67 (SIMPLE_EDGE)
Reducer 69 <- Map 101 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 70 <- Map 99 (SIMPLE_EDGE), Reducer 69 (SIMPLE_EDGE)
Reducer 71 <- Reducer 70 (SIMPLE_EDGE), Union 63 (CONTAINS)
Reducer 72 <- Map 102 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 73 <- Map 99 (SIMPLE_EDGE), Reducer 72 (SIMPLE_EDGE)
Reducer 74 <- Reducer 73 (SIMPLE_EDGE), Union 63 (CONTAINS)
Reducer 76 <- Map 75 (SIMPLE_EDGE), Map 79 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 77 <- Map 75 (SIMPLE_EDGE), Map 79 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 78 <- Map 75 (SIMPLE_EDGE), Map 79 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 8 <- Union 7 (SIMPLE_EDGE)
Reducer 80 <- Map 79 (SIMPLE_EDGE), Map 92 (SIMPLE_EDGE), Union 22 (CONTAINS)
Reducer 81 <- Map 79 (SIMPLE_EDGE), Map 92 (SIMPLE_EDGE), Union 40 (CONTAINS)
Reducer 82 <- Map 79 (SIMPLE_EDGE), Map 92 (SIMPLE_EDGE), Union 58 (CONTAINS)
Reducer 84 <- Map 83 (SIMPLE_EDGE), Map 87 (SIMPLE_EDGE), Union 3 (CONTAINS)
Reducer 85 <- Map 83 (SIMPLE_EDGE), Map 87 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 86 <- Map 83 (SIMPLE_EDGE), Map 87 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 88 <- Map 87 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE), Union 22 (CONTAINS)
Reducer 89 <- Map 87 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE), Union 40 (CONTAINS)
Reducer 9 <- Reducer 8 (SIMPLE_EDGE)
Reducer 90 <- Map 87 (SIMPLE_EDGE), Map 93 (SIMPLE_EDGE), Union 58 (CONTAINS)
Reducer 95 <- Map 94 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE)
Reducer 97 <- Map 103 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE)
Reducer 98 <- Map 104 (SIMPLE_EDGE), Map 96 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 9
      File Output Operator [FS_596]
        Limit [LIM_595] (rows=100 width=406)
          Number of rows:100
          Select Operator [SEL_594] (rows=1016388080 width=406)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 8 [SIMPLE_EDGE]
            SHUFFLE [RS_593]
              Select Operator [SEL_592] (rows=1016388080 width=406)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Group By Operator [GBY_591] (rows=1016388080 width=406)
                  Output:["_col0","_col1","_col2","_col3","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Union 7 [SIMPLE_EDGE]
                  <-Reducer 14 [CONTAINS]
                    Reduce Output Operator [RS_590]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_589] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_389] (rows=116155905 width=433)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_388] (rows=116155905 width=433)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_915] (rows=348467716 width=433)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 13 [SIMPLE_EDGE]
                              SHUFFLE [RS_385]
                                Merge Join Operator [MERGEJOIN_914] (rows=1 width=297)
                                  Conds:(Left Outer),Output:["_col1"]
                                <-Reducer 12 [SIMPLE_EDGE]
                                  SHUFFLE [RS_382]
                                    Select Operator [SEL_239] (rows=1 width=8)
                                      Filter Operator [FIL_238] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_236] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_231] (rows=1 width=8)
                                            Group By Operator [GBY_230] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 11 [SIMPLE_EDGE]
                                              <-Reducer 10 [CONTAINS]
                                                Reduce Output Operator [RS_229]
                                                  Group By Operator [GBY_228] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_227] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_204] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_882] (rows=633595212 width=88)
                                                          Conds:RS_201._col0=RS_202._col0(Inner),Output:["_col1"]
                                                        <-Map 20 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_202]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_200] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_818] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                TableScan [TS_3] (rows=73049 width=1119)
                                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                        <-Map 1 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_201]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_197] (rows=575995635 width=88)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_817] (rows=575995635 width=88)
                                                                predicate:ss_sold_date_sk is not null
                                                                TableScan [TS_0] (rows=575995635 width=88)
                                                                  default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity"]
                                              <-Reducer 77 [CONTAINS]
                                                Reduce Output Operator [RS_229]
                                                  Group By Operator [GBY_228] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_227] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_214] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_883] (rows=316788826 width=135)
                                                          Conds:RS_211._col0=RS_212._col0(Inner),Output:["_col1"]
                                                        <-Map 79 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_212]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_210] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_820] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                TableScan [TS_13] (rows=73049 width=1119)
                                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                        <-Map 75 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_211]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_207] (rows=287989836 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_819] (rows=287989836 width=135)
                                                                predicate:cs_sold_date_sk is not null
                                                                TableScan [TS_10] (rows=287989836 width=135)
                                                                  default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity"]
                                              <-Reducer 85 [CONTAINS]
                                                Reduce Output Operator [RS_229]
                                                  Group By Operator [GBY_228] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_227] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_226] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_884] (rows=158402938 width=135)
                                                          Conds:RS_223._col0=RS_224._col0(Inner),Output:["_col1"]
                                                        <-Map 87 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_224]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_222] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_822] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                TableScan [TS_25] (rows=73049 width=1119)
                                                                  default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                        <-Map 83 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_223]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_219] (rows=144002668 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_821] (rows=144002668 width=135)
                                                                predicate:ws_sold_date_sk is not null
                                                                TableScan [TS_22] (rows=144002668 width=135)
                                                                  default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity"]
                                <-Reducer 41 [SIMPLE_EDGE]
                                  SHUFFLE [RS_383]
                                    Group By Operator [GBY_276] (rows=1 width=288)
                                      Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                    <-Union 40 [SIMPLE_EDGE]
                                      <-Reducer 39 [CONTAINS]
                                        Reduce Output Operator [RS_275]
                                          Group By Operator [GBY_274] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_272] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_249] (rows=633595212 width=88)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_885] (rows=633595212 width=88)
                                                  Conds:RS_246._col0=RS_247._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 20 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_247]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_245] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_824] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_3]
                                                <-Map 91 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_246]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_242] (rows=575995635 width=88)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_823] (rows=575995635 width=88)
                                                        predicate:ss_sold_date_sk is not null
                                                        TableScan [TS_45] (rows=575995635 width=88)
                                                          default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_quantity","ss_list_price"]
                                      <-Reducer 81 [CONTAINS]
                                        Reduce Output Operator [RS_275]
                                          Group By Operator [GBY_274] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_272] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_259] (rows=316788826 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_886] (rows=316788826 width=135)
                                                  Conds:RS_256._col0=RS_257._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 79 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_257]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_255] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_826] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_13]
                                                <-Map 92 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_256]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_252] (rows=287989836 width=135)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_825] (rows=287989836 width=135)
                                                        predicate:cs_sold_date_sk is not null
                                                        TableScan [TS_55] (rows=287989836 width=135)
                                                          default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_quantity","cs_list_price"]
                                      <-Reducer 89 [CONTAINS]
                                        Reduce Output Operator [RS_275]
                                          Group By Operator [GBY_274] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_272] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_271] (rows=158402938 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_887] (rows=158402938 width=135)
                                                  Conds:RS_268._col0=RS_269._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 87 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_269]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_267] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_828] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_25]
                                                <-Map 93 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_268]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_264] (rows=144002668 width=135)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_827] (rows=144002668 width=135)
                                                        predicate:ws_sold_date_sk is not null
                                                        TableScan [TS_67] (rows=144002668 width=135)
                                                          default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_quantity","ws_list_price"]
                            <-Reducer 50 [SIMPLE_EDGE]
                              SHUFFLE [RS_386]
                                Group By Operator [GBY_380] (rows=348467716 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 49 [SIMPLE_EDGE]
                                  SHUFFLE [RS_379]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_378] (rows=696935432 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_376] (rows=696935432 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_896] (rows=696935432 width=135)
                                          Conds:RS_372._col1=RS_373._col0(Inner),RS_372._col1=RS_374._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 99 [SIMPLE_EDGE]
                                          SHUFFLE [RS_373]
                                            PartitionCols:_col0
                                            Select Operator [SEL_286] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_831] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                TableScan [TS_89] (rows=462000 width=1436)
                                                  default@item,item,Tbl:COMPLETE,Col:NONE,Output:["i_item_sk","i_brand_id","i_class_id","i_category_id"]
                                        <-Reducer 48 [SIMPLE_EDGE]
                                          SHUFFLE [RS_374]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_367] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 47 [SIMPLE_EDGE]
                                              SHUFFLE [RS_366]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_365] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_895] (rows=508200 width=1436)
                                                    Conds:RS_361._col1, _col2, _col3=RS_362._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 99 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_361]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_289] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_832] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_89]
                                                  <-Reducer 46 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_362]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_360] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_359] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_358] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 45 [SIMPLE_EDGE]
                                                            <-Reducer 44 [CONTAINS]
                                                              Reduce Output Operator [RS_357]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_356] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_309] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 43 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_308]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_307] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_305] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_890] (rows=696954748 width=88)
                                                                            Conds:RS_302._col1=RS_303._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_303]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_298] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_835] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 42 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_302]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_889] (rows=633595212 width=88)
                                                                                Conds:RS_299._col0=RS_300._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_300]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_295] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_834] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 100 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_299]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_292] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_833] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                      TableScan [TS_95] (rows=575995635 width=88)
                                                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk"]
                                                            <-Reducer 53 [CONTAINS]
                                                              Reduce Output Operator [RS_357]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_356] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_330] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 52 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_329]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_328] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_326] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_892] (rows=348467716 width=135)
                                                                            Conds:RS_323._col1=RS_324._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_324]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_319] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_838] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 51 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_323]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_891] (rows=316788826 width=135)
                                                                                Conds:RS_320._col0=RS_321._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_321]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_316] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_837] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 101 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_320]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_313] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_836] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                      TableScan [TS_116] (rows=287989836 width=135)
                                                                                        default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk"]
                                                            <-Reducer 56 [CONTAINS]
                                                              Reduce Output Operator [RS_357]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_356] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_352] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 55 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_351]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_350] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_348] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_894] (rows=174243235 width=135)
                                                                            Conds:RS_345._col1=RS_346._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_346]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_341] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_841] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 54 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_345]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_893] (rows=158402938 width=135)
                                                                                Conds:RS_342._col0=RS_343._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_343]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_338] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_840] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 102 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_342]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_335] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_839] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                      TableScan [TS_138] (rows=144002668 width=135)
                                                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk"]
                                        <-Reducer 97 [SIMPLE_EDGE]
                                          SHUFFLE [RS_372]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_888] (rows=316788826 width=135)
                                              Conds:RS_369._col0=RS_370._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 96 [SIMPLE_EDGE]
                                              SHUFFLE [RS_370]
                                                PartitionCols:_col0
                                                Select Operator [SEL_283] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_830] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                    TableScan [TS_86] (rows=73049 width=1119)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year","d_moy"]
                                            <-Map 103 [SIMPLE_EDGE]
                                              SHUFFLE [RS_369]
                                                PartitionCols:_col0
                                                Select Operator [SEL_280] (rows=287989836 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_829] (rows=287989836 width=135)
                                                    predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                    TableScan [TS_278] (rows=287989836 width=135)
                                                      default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_item_sk","cs_quantity","cs_list_price"]
                  <-Reducer 19 [CONTAINS]
                    Reduce Output Operator [RS_590]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_589] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_586] (rows=58081078 width=433)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_585] (rows=58081078 width=433)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_917] (rows=174243235 width=433)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 18 [SIMPLE_EDGE]
                              SHUFFLE [RS_582]
                                Merge Join Operator [MERGEJOIN_916] (rows=1 width=297)
                                  Conds:(Left Outer),Output:["_col1"]
                                <-Reducer 17 [SIMPLE_EDGE]
                                  SHUFFLE [RS_579]
                                    Select Operator [SEL_436] (rows=1 width=8)
                                      Filter Operator [FIL_435] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_433] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_428] (rows=1 width=8)
                                            Group By Operator [GBY_427] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 16 [SIMPLE_EDGE]
                                              <-Reducer 15 [CONTAINS]
                                                Reduce Output Operator [RS_426]
                                                  Group By Operator [GBY_425] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_424] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_401] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_897] (rows=633595212 width=88)
                                                          Conds:RS_398._col0=RS_399._col0(Inner),Output:["_col1"]
                                                        <-Map 20 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_399]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_397] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_843] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                 Please refer to the previous TableScan [TS_3]
                                                        <-Map 1 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_398]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_394] (rows=575995635 width=88)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_842] (rows=575995635 width=88)
                                                                predicate:ss_sold_date_sk is not null
                                                                 Please refer to the previous TableScan [TS_0]
                                              <-Reducer 78 [CONTAINS]
                                                Reduce Output Operator [RS_426]
                                                  Group By Operator [GBY_425] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_424] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_411] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_898] (rows=316788826 width=135)
                                                          Conds:RS_408._col0=RS_409._col0(Inner),Output:["_col1"]
                                                        <-Map 79 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_409]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_407] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_845] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                 Please refer to the previous TableScan [TS_13]
                                                        <-Map 75 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_408]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_404] (rows=287989836 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_844] (rows=287989836 width=135)
                                                                predicate:cs_sold_date_sk is not null
                                                                 Please refer to the previous TableScan [TS_10]
                                              <-Reducer 86 [CONTAINS]
                                                Reduce Output Operator [RS_426]
                                                  Group By Operator [GBY_425] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_424] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_423] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_899] (rows=158402938 width=135)
                                                          Conds:RS_420._col0=RS_421._col0(Inner),Output:["_col1"]
                                                        <-Map 87 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_421]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_419] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_847] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                 Please refer to the previous TableScan [TS_25]
                                                        <-Map 83 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_420]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_416] (rows=144002668 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_846] (rows=144002668 width=135)
                                                                predicate:ws_sold_date_sk is not null
                                                                 Please refer to the previous TableScan [TS_22]
                                <-Reducer 59 [SIMPLE_EDGE]
                                  SHUFFLE [RS_580]
                                    Group By Operator [GBY_473] (rows=1 width=288)
                                      Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                    <-Union 58 [SIMPLE_EDGE]
                                      <-Reducer 57 [CONTAINS]
                                        Reduce Output Operator [RS_472]
                                          Group By Operator [GBY_471] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_469] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_446] (rows=633595212 width=88)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_900] (rows=633595212 width=88)
                                                  Conds:RS_443._col0=RS_444._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 20 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_444]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_442] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_849] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_3]
                                                <-Map 91 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_443]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_439] (rows=575995635 width=88)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_848] (rows=575995635 width=88)
                                                        predicate:ss_sold_date_sk is not null
                                                         Please refer to the previous TableScan [TS_45]
                                      <-Reducer 82 [CONTAINS]
                                        Reduce Output Operator [RS_472]
                                          Group By Operator [GBY_471] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_469] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_456] (rows=316788826 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_901] (rows=316788826 width=135)
                                                  Conds:RS_453._col0=RS_454._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 79 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_454]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_452] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_851] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_13]
                                                <-Map 92 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_453]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_449] (rows=287989836 width=135)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_850] (rows=287989836 width=135)
                                                        predicate:cs_sold_date_sk is not null
                                                         Please refer to the previous TableScan [TS_55]
                                      <-Reducer 90 [CONTAINS]
                                        Reduce Output Operator [RS_472]
                                          Group By Operator [GBY_471] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_469] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_468] (rows=158402938 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_902] (rows=158402938 width=135)
                                                  Conds:RS_465._col0=RS_466._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 87 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_466]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_464] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_853] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_25]
                                                <-Map 93 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_465]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_461] (rows=144002668 width=135)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_852] (rows=144002668 width=135)
                                                        predicate:ws_sold_date_sk is not null
                                                         Please refer to the previous TableScan [TS_67]
                            <-Reducer 68 [SIMPLE_EDGE]
                              SHUFFLE [RS_583]
                                Group By Operator [GBY_577] (rows=174243235 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 67 [SIMPLE_EDGE]
                                  SHUFFLE [RS_576]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_575] (rows=348486471 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_573] (rows=348486471 width=135)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_911] (rows=348486471 width=135)
                                          Conds:RS_569._col1=RS_570._col0(Inner),RS_569._col1=RS_571._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 99 [SIMPLE_EDGE]
                                          SHUFFLE [RS_570]
                                            PartitionCols:_col0
                                            Select Operator [SEL_483] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_856] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_89]
                                        <-Reducer 66 [SIMPLE_EDGE]
                                          SHUFFLE [RS_571]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_564] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 65 [SIMPLE_EDGE]
                                              SHUFFLE [RS_563]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_562] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_910] (rows=508200 width=1436)
                                                    Conds:RS_558._col1, _col2, _col3=RS_559._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 99 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_558]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_486] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_857] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_89]
                                                  <-Reducer 64 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_559]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_557] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_556] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_555] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 63 [SIMPLE_EDGE]
                                                            <-Reducer 62 [CONTAINS]
                                                              Reduce Output Operator [RS_554]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_553] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_506] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 61 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_505]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_504] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_502] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_905] (rows=696954748 width=88)
                                                                            Conds:RS_499._col1=RS_500._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_500]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_495] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_860] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 60 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_499]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_904] (rows=633595212 width=88)
                                                                                Conds:RS_496._col0=RS_497._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_497]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_492] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_859] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 100 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_496]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_489] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_858] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_95]
                                                            <-Reducer 71 [CONTAINS]
                                                              Reduce Output Operator [RS_554]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_553] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_527] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 70 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_526]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_525] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_523] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_907] (rows=348467716 width=135)
                                                                            Conds:RS_520._col1=RS_521._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_521]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_516] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_863] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 69 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_520]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_906] (rows=316788826 width=135)
                                                                                Conds:RS_517._col0=RS_518._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_518]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_513] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_862] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 101 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_517]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_510] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_861] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_116]
                                                            <-Reducer 74 [CONTAINS]
                                                              Reduce Output Operator [RS_554]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_553] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_549] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 73 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_548]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_547] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_545] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_909] (rows=174243235 width=135)
                                                                            Conds:RS_542._col1=RS_543._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_543]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_538] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_866] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 72 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_542]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_908] (rows=158402938 width=135)
                                                                                Conds:RS_539._col0=RS_540._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_540]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_535] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_865] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 102 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_539]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_532] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_864] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_138]
                                        <-Reducer 98 [SIMPLE_EDGE]
                                          SHUFFLE [RS_569]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_903] (rows=158402938 width=135)
                                              Conds:RS_566._col0=RS_567._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 96 [SIMPLE_EDGE]
                                              SHUFFLE [RS_567]
                                                PartitionCols:_col0
                                                Select Operator [SEL_480] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_855] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_86]
                                            <-Map 104 [SIMPLE_EDGE]
                                              SHUFFLE [RS_566]
                                                PartitionCols:_col0
                                                Select Operator [SEL_477] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_854] (rows=144002668 width=135)
                                                    predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_475] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_item_sk","ws_quantity","ws_list_price"]
                  <-Reducer 6 [CONTAINS]
                    Reduce Output Operator [RS_590]
                      PartitionCols:_col0, _col1, _col2, _col3, _col4
                      Group By Operator [GBY_589] (rows=2032776160 width=406)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col4)","sum(_col5)"],keys:_col0, _col1, _col2, _col3, 0
                        Select Operator [SEL_194] (rows=232318249 width=386)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                          Filter Operator [FIL_193] (rows=232318249 width=386)
                            predicate:(_col5 > _col1)
                            Merge Join Operator [MERGEJOIN_913] (rows=696954748 width=386)
                              Conds:(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                            <-Reducer 32 [SIMPLE_EDGE]
                              SHUFFLE [RS_191]
                                Group By Operator [GBY_185] (rows=696954748 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","count(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                                <-Reducer 31 [SIMPLE_EDGE]
                                  SHUFFLE [RS_184]
                                    PartitionCols:_col0, _col1, _col2
                                    Group By Operator [GBY_183] (rows=1393909496 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col3)","count()"],keys:_col0, _col1, _col2
                                      Select Operator [SEL_181] (rows=1393909496 width=88)
                                        Output:["_col0","_col1","_col2","_col3"]
                                        Merge Join Operator [MERGEJOIN_881] (rows=1393909496 width=88)
                                          Conds:RS_177._col1=RS_178._col0(Inner),RS_177._col1=RS_179._col0(Inner),Output:["_col2","_col3","_col8","_col9","_col10"]
                                        <-Map 99 [SIMPLE_EDGE]
                                          SHUFFLE [RS_178]
                                            PartitionCols:_col0
                                            Select Operator [SEL_91] (rows=462000 width=1436)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_806] (rows=462000 width=1436)
                                                predicate:i_item_sk is not null
                                                 Please refer to the previous TableScan [TS_89]
                                        <-Reducer 30 [SIMPLE_EDGE]
                                          SHUFFLE [RS_179]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_172] (rows=254100 width=1436)
                                              Output:["_col0"],keys:KEY._col0
                                            <-Reducer 29 [SIMPLE_EDGE]
                                              SHUFFLE [RS_171]
                                                PartitionCols:_col0
                                                Group By Operator [GBY_170] (rows=508200 width=1436)
                                                  Output:["_col0"],keys:_col0
                                                  Merge Join Operator [MERGEJOIN_880] (rows=508200 width=1436)
                                                    Conds:RS_166._col1, _col2, _col3=RS_167._col0, _col1, _col2(Inner),Output:["_col0"]
                                                  <-Map 99 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_166]
                                                      PartitionCols:_col1, _col2, _col3
                                                      Select Operator [SEL_94] (rows=462000 width=1436)
                                                        Output:["_col0","_col1","_col2","_col3"]
                                                        Filter Operator [FIL_807] (rows=462000 width=1436)
                                                          predicate:(i_brand_id is not null and i_class_id is not null and i_category_id is not null and i_item_sk is not null)
                                                           Please refer to the previous TableScan [TS_89]
                                                  <-Reducer 28 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_167]
                                                      PartitionCols:_col0, _col1, _col2
                                                      Select Operator [SEL_165] (rows=1 width=108)
                                                        Output:["_col0","_col1","_col2"]
                                                        Filter Operator [FIL_164] (rows=1 width=108)
                                                          predicate:(_col3 = 3)
                                                          Group By Operator [GBY_163] (rows=304916424 width=108)
                                                            Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                          <-Union 27 [SIMPLE_EDGE]
                                                            <-Reducer 26 [CONTAINS]
                                                              Reduce Output Operator [RS_162]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_161] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_114] (rows=348477374 width=88)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 25 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_113]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_112] (rows=696954748 width=88)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_110] (rows=696954748 width=88)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_875] (rows=696954748 width=88)
                                                                            Conds:RS_107._col1=RS_108._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_108]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_103] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_810] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 24 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_107]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_874] (rows=633595212 width=88)
                                                                                Conds:RS_104._col0=RS_105._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_105]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_100] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_809] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 100 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_104]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_97] (rows=575995635 width=88)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_808] (rows=575995635 width=88)
                                                                                      predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_95]
                                                            <-Reducer 35 [CONTAINS]
                                                              Reduce Output Operator [RS_162]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_161] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_135] (rows=174233858 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 34 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_134]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_133] (rows=348467716 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_131] (rows=348467716 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_877] (rows=348467716 width=135)
                                                                            Conds:RS_128._col1=RS_129._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_129]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_124] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_813] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 33 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_128]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_876] (rows=316788826 width=135)
                                                                                Conds:RS_125._col0=RS_126._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_126]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_121] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_812] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 101 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_125]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_118] (rows=287989836 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_811] (rows=287989836 width=135)
                                                                                      predicate:(cs_item_sk is not null and cs_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_116]
                                                            <-Reducer 38 [CONTAINS]
                                                              Reduce Output Operator [RS_162]
                                                                PartitionCols:_col0, _col1, _col2
                                                                Group By Operator [GBY_161] (rows=609832849 width=108)
                                                                  Output:["_col0","_col1","_col2","_col3"],aggregations:["count(_col3)"],keys:_col0, _col1, _col2
                                                                  Group By Operator [GBY_157] (rows=87121617 width=135)
                                                                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2
                                                                  <-Reducer 37 [SIMPLE_EDGE]
                                                                    SHUFFLE [RS_156]
                                                                      PartitionCols:_col0, _col1, _col2
                                                                      Group By Operator [GBY_155] (rows=174243235 width=135)
                                                                        Output:["_col0","_col1","_col2","_col3"],aggregations:["count(1)"],keys:_col0, _col1, _col2
                                                                        Select Operator [SEL_153] (rows=174243235 width=135)
                                                                          Output:["_col0","_col1","_col2"]
                                                                          Merge Join Operator [MERGEJOIN_879] (rows=174243235 width=135)
                                                                            Conds:RS_150._col1=RS_151._col0(Inner),Output:["_col5","_col6","_col7"]
                                                                          <-Map 99 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_151]
                                                                              PartitionCols:_col0
                                                                              Select Operator [SEL_146] (rows=462000 width=1436)
                                                                                Output:["_col0","_col1","_col2","_col3"]
                                                                                Filter Operator [FIL_816] (rows=462000 width=1436)
                                                                                  predicate:(i_item_sk is not null and i_brand_id is not null and i_class_id is not null and i_category_id is not null)
                                                                                   Please refer to the previous TableScan [TS_89]
                                                                          <-Reducer 36 [SIMPLE_EDGE]
                                                                            SHUFFLE [RS_150]
                                                                              PartitionCols:_col1
                                                                              Merge Join Operator [MERGEJOIN_878] (rows=158402938 width=135)
                                                                                Conds:RS_147._col0=RS_148._col0(Inner),Output:["_col1"]
                                                                              <-Map 20 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_148]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_143] (rows=8116 width=1119)
                                                                                    Output:["_col0"]
                                                                                    Filter Operator [FIL_815] (rows=8116 width=1119)
                                                                                      predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_3]
                                                                              <-Map 102 [SIMPLE_EDGE]
                                                                                SHUFFLE [RS_147]
                                                                                  PartitionCols:_col0
                                                                                  Select Operator [SEL_140] (rows=144002668 width=135)
                                                                                    Output:["_col0","_col1"]
                                                                                    Filter Operator [FIL_814] (rows=144002668 width=135)
                                                                                      predicate:(ws_item_sk is not null and ws_sold_date_sk is not null)
                                                                                       Please refer to the previous TableScan [TS_138]
                                        <-Reducer 95 [SIMPLE_EDGE]
                                          SHUFFLE [RS_177]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_873] (rows=633595212 width=88)
                                              Conds:RS_174._col0=RS_175._col0(Inner),Output:["_col1","_col2","_col3"]
                                            <-Map 96 [SIMPLE_EDGE]
                                              SHUFFLE [RS_175]
                                                PartitionCols:_col0
                                                Select Operator [SEL_88] (rows=18262 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_805] (rows=18262 width=1119)
                                                    predicate:((d_year = 2000) and (d_moy = 11) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_86]
                                            <-Map 94 [SIMPLE_EDGE]
                                              SHUFFLE [RS_174]
                                                PartitionCols:_col0
                                                Select Operator [SEL_85] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2","_col3"]
                                                  Filter Operator [FIL_804] (rows=575995635 width=88)
                                                    predicate:(ss_item_sk is not null and ss_sold_date_sk is not null)
                                                    TableScan [TS_83] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_item_sk","ss_quantity","ss_list_price"]
                            <-Reducer 5 [SIMPLE_EDGE]
                              SHUFFLE [RS_190]
                                Merge Join Operator [MERGEJOIN_912] (rows=1 width=297)
                                  Conds:(Left Outer),Output:["_col1"]
                                <-Reducer 23 [SIMPLE_EDGE]
                                  SHUFFLE [RS_188]
                                    Group By Operator [GBY_81] (rows=1 width=288)
                                      Output:["_col0"],aggregations:["avg(VALUE._col0)"]
                                    <-Union 22 [SIMPLE_EDGE]
                                      <-Reducer 21 [CONTAINS]
                                        Reduce Output Operator [RS_80]
                                          Group By Operator [GBY_79] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_77] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_54] (rows=633595212 width=88)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_870] (rows=633595212 width=88)
                                                  Conds:RS_51._col0=RS_52._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 20 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_52]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_50] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_799] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_3]
                                                <-Map 91 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_51]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_47] (rows=575995635 width=88)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_798] (rows=575995635 width=88)
                                                        predicate:ss_sold_date_sk is not null
                                                         Please refer to the previous TableScan [TS_45]
                                      <-Reducer 80 [CONTAINS]
                                        Reduce Output Operator [RS_80]
                                          Group By Operator [GBY_79] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_77] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_64] (rows=316788826 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_871] (rows=316788826 width=135)
                                                  Conds:RS_61._col0=RS_62._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 79 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_62]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_60] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_801] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_13]
                                                <-Map 92 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_61]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_57] (rows=287989836 width=135)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_800] (rows=287989836 width=135)
                                                        predicate:cs_sold_date_sk is not null
                                                         Please refer to the previous TableScan [TS_55]
                                      <-Reducer 88 [CONTAINS]
                                        Reduce Output Operator [RS_80]
                                          Group By Operator [GBY_79] (rows=1 width=288)
                                            Output:["_col0"],aggregations:["avg(_col0)"]
                                            Select Operator [SEL_77] (rows=1108786976 width=108)
                                              Output:["_col0"]
                                              Select Operator [SEL_76] (rows=158402938 width=135)
                                                Output:["_col0","_col1"]
                                                Merge Join Operator [MERGEJOIN_872] (rows=158402938 width=135)
                                                  Conds:RS_73._col0=RS_74._col0(Inner),Output:["_col1","_col2"]
                                                <-Map 87 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_74]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_72] (rows=8116 width=1119)
                                                      Output:["_col0"]
                                                      Filter Operator [FIL_803] (rows=8116 width=1119)
                                                        predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                         Please refer to the previous TableScan [TS_25]
                                                <-Map 93 [SIMPLE_EDGE]
                                                  SHUFFLE [RS_73]
                                                    PartitionCols:_col0
                                                    Select Operator [SEL_69] (rows=144002668 width=135)
                                                      Output:["_col0","_col1","_col2"]
                                                      Filter Operator [FIL_802] (rows=144002668 width=135)
                                                        predicate:ws_sold_date_sk is not null
                                                         Please refer to the previous TableScan [TS_67]
                                <-Reducer 4 [SIMPLE_EDGE]
                                  SHUFFLE [RS_187]
                                    Select Operator [SEL_44] (rows=1 width=8)
                                      Filter Operator [FIL_43] (rows=1 width=8)
                                        predicate:(sq_count_check(_col0) <= 1)
                                        Group By Operator [GBY_41] (rows=1 width=8)
                                          Output:["_col0"],aggregations:["count()"]
                                          Select Operator [SEL_36] (rows=1 width=8)
                                            Group By Operator [GBY_35] (rows=1 width=8)
                                              Output:["_col0"],aggregations:["count(VALUE._col0)"]
                                            <-Union 3 [SIMPLE_EDGE]
                                              <-Reducer 2 [CONTAINS]
                                                Reduce Output Operator [RS_34]
                                                  Group By Operator [GBY_33] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_32] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_9] (rows=633595212 width=88)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_867] (rows=633595212 width=88)
                                                          Conds:RS_6._col0=RS_7._col0(Inner),Output:["_col1"]
                                                        <-Map 20 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_7]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_5] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_793] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1999 AND 2001 and d_date_sk is not null)
                                                                 Please refer to the previous TableScan [TS_3]
                                                        <-Map 1 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_6]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_2] (rows=575995635 width=88)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_792] (rows=575995635 width=88)
                                                                predicate:ss_sold_date_sk is not null
                                                                 Please refer to the previous TableScan [TS_0]
                                              <-Reducer 76 [CONTAINS]
                                                Reduce Output Operator [RS_34]
                                                  Group By Operator [GBY_33] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_32] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_19] (rows=316788826 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_868] (rows=316788826 width=135)
                                                          Conds:RS_16._col0=RS_17._col0(Inner),Output:["_col1"]
                                                        <-Map 79 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_17]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_15] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_795] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                 Please refer to the previous TableScan [TS_13]
                                                        <-Map 75 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_16]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_12] (rows=287989836 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_794] (rows=287989836 width=135)
                                                                predicate:cs_sold_date_sk is not null
                                                                 Please refer to the previous TableScan [TS_10]
                                              <-Reducer 84 [CONTAINS]
                                                Reduce Output Operator [RS_34]
                                                  Group By Operator [GBY_33] (rows=1 width=8)
                                                    Output:["_col0"],aggregations:["count(_col0)"]
                                                    Select Operator [SEL_32] (rows=1108786976 width=108)
                                                      Output:["_col0"]
                                                      Select Operator [SEL_31] (rows=158402938 width=135)
                                                        Output:["_col0"]
                                                        Merge Join Operator [MERGEJOIN_869] (rows=158402938 width=135)
                                                          Conds:RS_28._col0=RS_29._col0(Inner),Output:["_col1"]
                                                        <-Map 87 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_29]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_27] (rows=8116 width=1119)
                                                              Output:["_col0"]
                                                              Filter Operator [FIL_797] (rows=8116 width=1119)
                                                                predicate:(d_year BETWEEN 1998 AND 2000 and d_date_sk is not null)
                                                                 Please refer to the previous TableScan [TS_25]
                                                        <-Map 83 [SIMPLE_EDGE]
                                                          SHUFFLE [RS_28]
                                                            PartitionCols:_col0
                                                            Select Operator [SEL_24] (rows=144002668 width=135)
                                                              Output:["_col0","_col1"]
                                                              Filter Operator [FIL_796] (rows=144002668 width=135)
                                                                predicate:ws_sold_date_sk is not null
                                                                 Please refer to the previous TableScan [TS_22]

