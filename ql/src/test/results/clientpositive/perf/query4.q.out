PREHOOK: query: explain
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total
       ,'c' sale_type
 from customer
     ,catalog_sales
     ,date_dim
 where c_customer_sk = cs_bill_customer_sk
   and cs_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  t_s_secyear.customer_preferred_cust_flag
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_c_firstyear
     ,year_total t_c_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
   and t_s_firstyear.customer_id = t_c_secyear.customer_id
   and t_s_firstyear.customer_id = t_c_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_secyear.customer_id
   and t_s_firstyear.sale_type = 's'
   and t_c_firstyear.sale_type = 'c'
   and t_w_firstyear.sale_type = 'w'
   and t_s_secyear.sale_type = 's'
   and t_c_secyear.sale_type = 'c'
   and t_w_secyear.sale_type = 'w'
   and t_s_firstyear.dyear =  2001
   and t_s_secyear.dyear = 2001+1
   and t_c_firstyear.dyear =  2001
   and t_c_secyear.dyear =  2001+1
   and t_w_firstyear.dyear = 2001
   and t_w_secyear.dyear = 2001+1
   and t_s_firstyear.year_total > 0
   and t_c_firstyear.year_total > 0
   and t_w_firstyear.year_total > 0
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
 order by t_s_secyear.customer_preferred_cust_flag
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total
       ,'c' sale_type
 from customer
     ,catalog_sales
     ,date_dim
 where c_customer_sk = cs_bill_customer_sk
   and cs_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,c_preferred_cust_flag customer_preferred_cust_flag
       ,c_birth_country customer_birth_country
       ,c_login customer_login
       ,c_email_address customer_email_address
       ,d_year dyear
       ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,c_preferred_cust_flag
         ,c_birth_country
         ,c_login
         ,c_email_address
         ,d_year
         )
  select  t_s_secyear.customer_preferred_cust_flag
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_c_firstyear
     ,year_total t_c_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
   and t_s_firstyear.customer_id = t_c_secyear.customer_id
   and t_s_firstyear.customer_id = t_c_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_firstyear.customer_id
   and t_s_firstyear.customer_id = t_w_secyear.customer_id
   and t_s_firstyear.sale_type = 's'
   and t_c_firstyear.sale_type = 'c'
   and t_w_firstyear.sale_type = 'w'
   and t_s_secyear.sale_type = 's'
   and t_c_secyear.sale_type = 'c'
   and t_w_secyear.sale_type = 'w'
   and t_s_firstyear.dyear =  2001
   and t_s_secyear.dyear = 2001+1
   and t_c_firstyear.dyear =  2001
   and t_c_secyear.dyear =  2001+1
   and t_w_firstyear.dyear = 2001
   and t_w_secyear.dyear = 2001+1
   and t_s_firstyear.year_total > 0
   and t_c_firstyear.year_total > 0
   and t_w_firstyear.year_total > 0
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
   and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end
           > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
 order by t_s_secyear.customer_preferred_cust_flag
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 12 <- Union 11 (SIMPLE_EDGE), Union 16 (SIMPLE_EDGE), Union 20 (SIMPLE_EDGE), Union 24 (SIMPLE_EDGE)
Reducer 13 <- Map 1 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE)
Reducer 14 <- Map 66 (SIMPLE_EDGE), Reducer 13 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 17 <- Map 1 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE)
Reducer 18 <- Map 66 (SIMPLE_EDGE), Reducer 17 (SIMPLE_EDGE)
Reducer 19 <- Reducer 18 (SIMPLE_EDGE), Union 20 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE)
Reducer 21 <- Map 1 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE)
Reducer 22 <- Map 66 (SIMPLE_EDGE), Reducer 21 (SIMPLE_EDGE)
Reducer 23 <- Reducer 22 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 25 <- Map 1 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE)
Reducer 26 <- Map 66 (SIMPLE_EDGE), Reducer 25 (SIMPLE_EDGE)
Reducer 27 <- Reducer 26 (SIMPLE_EDGE), Union 28 (CONTAINS)
Reducer 3 <- Map 66 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Map 29 (SIMPLE_EDGE), Map 67 (SIMPLE_EDGE)
Reducer 31 <- Map 66 (SIMPLE_EDGE), Reducer 30 (SIMPLE_EDGE)
Reducer 32 <- Reducer 31 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 33 <- Map 29 (SIMPLE_EDGE), Map 68 (SIMPLE_EDGE)
Reducer 34 <- Map 66 (SIMPLE_EDGE), Reducer 33 (SIMPLE_EDGE)
Reducer 35 <- Reducer 34 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 36 <- Map 29 (SIMPLE_EDGE), Map 67 (SIMPLE_EDGE)
Reducer 37 <- Map 66 (SIMPLE_EDGE), Reducer 36 (SIMPLE_EDGE)
Reducer 38 <- Reducer 37 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 39 <- Map 29 (SIMPLE_EDGE), Map 68 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 40 <- Map 66 (SIMPLE_EDGE), Reducer 39 (SIMPLE_EDGE)
Reducer 41 <- Reducer 40 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 42 <- Map 29 (SIMPLE_EDGE), Map 67 (SIMPLE_EDGE)
Reducer 43 <- Map 66 (SIMPLE_EDGE), Reducer 42 (SIMPLE_EDGE)
Reducer 44 <- Reducer 43 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 45 <- Map 29 (SIMPLE_EDGE), Map 68 (SIMPLE_EDGE)
Reducer 46 <- Map 66 (SIMPLE_EDGE), Reducer 45 (SIMPLE_EDGE)
Reducer 47 <- Reducer 46 (SIMPLE_EDGE), Union 16 (CONTAINS)
Reducer 48 <- Map 29 (SIMPLE_EDGE), Map 67 (SIMPLE_EDGE)
Reducer 49 <- Map 66 (SIMPLE_EDGE), Reducer 48 (SIMPLE_EDGE)
Reducer 50 <- Reducer 49 (SIMPLE_EDGE), Union 20 (CONTAINS)
Reducer 51 <- Map 29 (SIMPLE_EDGE), Map 68 (SIMPLE_EDGE)
Reducer 52 <- Map 66 (SIMPLE_EDGE), Reducer 51 (SIMPLE_EDGE)
Reducer 53 <- Reducer 52 (SIMPLE_EDGE), Union 20 (CONTAINS)
Reducer 54 <- Map 29 (SIMPLE_EDGE), Map 67 (SIMPLE_EDGE)
Reducer 55 <- Map 66 (SIMPLE_EDGE), Reducer 54 (SIMPLE_EDGE)
Reducer 56 <- Reducer 55 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 57 <- Map 29 (SIMPLE_EDGE), Map 68 (SIMPLE_EDGE)
Reducer 58 <- Map 66 (SIMPLE_EDGE), Reducer 57 (SIMPLE_EDGE)
Reducer 59 <- Reducer 58 (SIMPLE_EDGE), Union 24 (CONTAINS)
Reducer 6 <- Reducer 12 (SIMPLE_EDGE), Union 28 (SIMPLE_EDGE), Union 5 (SIMPLE_EDGE)
Reducer 60 <- Map 29 (SIMPLE_EDGE), Map 67 (SIMPLE_EDGE)
Reducer 61 <- Map 66 (SIMPLE_EDGE), Reducer 60 (SIMPLE_EDGE)
Reducer 62 <- Reducer 61 (SIMPLE_EDGE), Union 28 (CONTAINS)
Reducer 63 <- Map 29 (SIMPLE_EDGE), Map 68 (SIMPLE_EDGE)
Reducer 64 <- Map 66 (SIMPLE_EDGE), Reducer 63 (SIMPLE_EDGE)
Reducer 65 <- Reducer 64 (SIMPLE_EDGE), Union 28 (CONTAINS)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 1 (SIMPLE_EDGE), Map 29 (SIMPLE_EDGE)
Reducer 9 <- Map 66 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_423]
        Limit [LIM_422] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_421] (rows=632486463 width=88)
            Output:["_col0"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_420]
              Select Operator [SEL_419] (rows=632486463 width=88)
                Output:["_col0"]
                Filter Operator [FIL_418] (rows=632486463 width=88)
                  predicate:CASE WHEN ((_col10 > 0)) THEN (CASE WHEN ((_col6 > 0)) THEN (((_col8 / _col6) > (_col12 / _col10))) ELSE ((null > (_col12 / _col10))) END) ELSE (CASE WHEN ((_col6 > 0)) THEN (((_col8 / _col6) > null)) ELSE (null) END) END
                  Select Operator [SEL_417] (rows=1264972927 width=88)
                    Output:["_col3","_col6","_col8","_col10","_col12"]
                    Merge Join Operator [MERGEJOIN_830] (rows=1264972927 width=88)
                      Conds:Union 5._col0=RS_414._col0(Inner),RS_414._col0=Union 28._col0(Inner),Output:["_col1","_col5","_col8","_col10","_col12"]
                    <-Reducer 12 [SIMPLE_EDGE]
                      SHUFFLE [RS_414]
                        PartitionCols:_col0
                        Select Operator [SEL_346] (rows=574987682 width=88)
                          Output:["_col0","_col3","_col6","_col8"]
                          Filter Operator [FIL_345] (rows=574987682 width=88)
                            predicate:CASE WHEN ((_col1 > 0)) THEN (CASE WHEN ((_col6 > 0)) THEN (((_col8 / _col6) > (_col4 / _col1))) ELSE ((null > (_col4 / _col1))) END) ELSE (CASE WHEN ((_col6 > 0)) THEN (((_col8 / _col6) > null)) ELSE (null) END) END
                            Select Operator [SEL_344] (rows=1149975365 width=88)
                              Output:["_col0","_col1","_col3","_col4","_col6","_col8"]
                              Merge Join Operator [MERGEJOIN_829] (rows=1149975365 width=88)
                                Conds:Union 11._col0=Union 16._col0(Inner),Union 11._col0=Union 20._col0(Inner),Union 11._col0=Union 24._col0(Inner),Output:["_col0","_col1","_col3","_col5","_col7","_col8"]
                              <-Union 11 [SIMPLE_EDGE]
                                <-Reducer 10 [CONTAINS]
                                  Reduce Output Operator [RS_339]
                                    PartitionCols:_col0
                                    Select Operator [SEL_90] (rows=116159124 width=88)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_89] (rows=116159124 width=88)
                                        predicate:(_col7 > 0)
                                        Select Operator [SEL_788] (rows=348477374 width=88)
                                          Output:["_col0","_col7"]
                                          Group By Operator [GBY_88] (rows=348477374 width=88)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6
                                          <-Reducer 9 [SIMPLE_EDGE]
                                            SHUFFLE [RS_87]
                                              PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                              Group By Operator [GBY_86] (rows=696954748 width=88)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col7)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                                Select Operator [SEL_84] (rows=696954748 width=88)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                  Merge Join Operator [MERGEJOIN_800] (rows=696954748 width=88)
                                                    Conds:RS_81._col1=RS_82._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                                  <-Map 66 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_82]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_77] (rows=80000000 width=860)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                        Filter Operator [FIL_741] (rows=80000000 width=860)
                                                          predicate:(c_customer_sk is not null and c_customer_id is not null)
                                                          TableScan [TS_6] (rows=80000000 width=860)
                                                            default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_customer_id","c_first_name","c_last_name","c_preferred_cust_flag","c_birth_country","c_login","c_email_address"]
                                                  <-Reducer 8 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_81]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_799] (rows=633595212 width=88)
                                                        Conds:RS_78._col0=RS_79._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5"]
                                                      <-Map 29 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_79]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_74] (rows=36524 width=1119)
                                                            Output:["_col0"]
                                                            Filter Operator [FIL_740] (rows=36524 width=1119)
                                                              predicate:((d_year = 2001) and d_date_sk is not null)
                                                              TableScan [TS_3] (rows=73049 width=1119)
                                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                                      <-Map 1 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_78]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_71] (rows=575995635 width=88)
                                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                            Filter Operator [FIL_739] (rows=575995635 width=88)
                                                              predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                              TableScan [TS_0] (rows=575995635 width=88)
                                                                default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk","ss_ext_discount_amt","ss_ext_sales_price","ss_ext_wholesale_cost","ss_ext_list_price"]
                                <-Reducer 38 [CONTAINS]
                                  Reduce Output Operator [RS_339]
                                    PartitionCols:_col0
                                    Select Operator [SEL_112] (rows=1 width=162)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_111] (rows=1 width=162)
                                        predicate:(_col8 > 0)
                                        Select Operator [SEL_789] (rows=1 width=162)
                                          Output:["_col0","_col8"]
                                          Group By Operator [GBY_110] (rows=1 width=162)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                          <-Reducer 37 [SIMPLE_EDGE]
                                            SHUFFLE [RS_109]
                                              PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                              Group By Operator [GBY_108] (rows=1 width=162)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                                Select Operator [SEL_106] (rows=1 width=162)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                                  Merge Join Operator [MERGEJOIN_802] (rows=1 width=162)
                                                    Conds:RS_103._col1=RS_104._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                                  <-Map 66 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_104]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_99] (rows=1 width=860)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                        Filter Operator [FIL_744] (rows=1 width=860)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_6]
                                                  <-Reducer 36 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_103]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_801] (rows=1 width=148)
                                                        Conds:RS_100._col0=RS_101._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                                      <-Map 29 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_101]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_96] (rows=1 width=1119)
                                                            Output:["_col0","_col1"]
                                                            Filter Operator [FIL_743] (rows=1 width=1119)
                                                              predicate:false
                                                               Please refer to the previous TableScan [TS_3]
                                                      <-Map 67 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_100]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_93] (rows=1 width=135)
                                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                            Filter Operator [FIL_742] (rows=1 width=135)
                                                              predicate:false
                                                              TableScan [TS_22] (rows=287989836 width=135)
                                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:NONE,Output:["cs_sold_date_sk","cs_bill_customer_sk","cs_ext_discount_amt","cs_ext_sales_price","cs_ext_wholesale_cost","cs_ext_list_price"]
                                <-Reducer 41 [CONTAINS]
                                  Reduce Output Operator [RS_339]
                                    PartitionCols:_col0
                                    Select Operator [SEL_136] (rows=1 width=162)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_135] (rows=1 width=162)
                                        predicate:(_col8 > 0)
                                        Select Operator [SEL_790] (rows=1 width=162)
                                          Output:["_col0","_col8"]
                                          Group By Operator [GBY_134] (rows=1 width=162)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                          <-Reducer 40 [SIMPLE_EDGE]
                                            SHUFFLE [RS_133]
                                              PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                              Group By Operator [GBY_132] (rows=1 width=162)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                                Select Operator [SEL_130] (rows=1 width=162)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                                  Merge Join Operator [MERGEJOIN_804] (rows=1 width=162)
                                                    Conds:RS_127._col1=RS_128._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                                  <-Map 66 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_128]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_123] (rows=1 width=860)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                        Filter Operator [FIL_747] (rows=1 width=860)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_6]
                                                  <-Reducer 39 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_127]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_803] (rows=1 width=148)
                                                        Conds:RS_124._col0=RS_125._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                                      <-Map 29 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_125]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_120] (rows=1 width=1119)
                                                            Output:["_col0","_col1"]
                                                            Filter Operator [FIL_746] (rows=1 width=1119)
                                                              predicate:false
                                                               Please refer to the previous TableScan [TS_3]
                                                      <-Map 68 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_124]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_117] (rows=1 width=135)
                                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                            Filter Operator [FIL_745] (rows=1 width=135)
                                                              predicate:false
                                                              TableScan [TS_46] (rows=144002668 width=135)
                                                                default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_bill_customer_sk","ws_ext_discount_amt","ws_ext_sales_price","ws_ext_wholesale_cost","ws_ext_list_price"]
                              <-Union 16 [SIMPLE_EDGE]
                                <-Reducer 15 [CONTAINS]
                                  Reduce Output Operator [RS_340]
                                    PartitionCols:_col0
                                    Select Operator [SEL_159] (rows=1 width=105)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_158] (rows=1 width=105)
                                        predicate:(_col8 > 0)
                                        Select Operator [SEL_791] (rows=1 width=105)
                                          Output:["_col0","_col8"]
                                          Group By Operator [GBY_157] (rows=1 width=105)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                          <-Reducer 14 [SIMPLE_EDGE]
                                            SHUFFLE [RS_156]
                                              PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                              Group By Operator [GBY_155] (rows=1 width=105)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                                Select Operator [SEL_153] (rows=1 width=105)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                                  Merge Join Operator [MERGEJOIN_806] (rows=1 width=105)
                                                    Conds:RS_150._col1=RS_151._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                                  <-Map 66 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_151]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_146] (rows=1 width=860)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                        Filter Operator [FIL_750] (rows=1 width=860)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_6]
                                                  <-Reducer 13 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_150]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_805] (rows=1 width=96)
                                                        Conds:RS_147._col0=RS_148._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                                      <-Map 29 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_148]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_143] (rows=1 width=1119)
                                                            Output:["_col0","_col1"]
                                                            Filter Operator [FIL_749] (rows=1 width=1119)
                                                              predicate:false
                                                               Please refer to the previous TableScan [TS_3]
                                                      <-Map 1 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_147]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_140] (rows=1 width=88)
                                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                            Filter Operator [FIL_748] (rows=1 width=88)
                                                              predicate:false
                                                               Please refer to the previous TableScan [TS_0]
                                <-Reducer 44 [CONTAINS]
                                  Reduce Output Operator [RS_340]
                                    PartitionCols:_col0
                                    Select Operator [SEL_181] (rows=58077952 width=135)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_180] (rows=58077952 width=135)
                                        predicate:(_col7 > 0)
                                        Select Operator [SEL_784] (rows=174233858 width=135)
                                          Output:["_col0","_col7"]
                                          Group By Operator [GBY_179] (rows=174233858 width=135)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6
                                          <-Reducer 43 [SIMPLE_EDGE]
                                            SHUFFLE [RS_178]
                                              PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                              Group By Operator [GBY_177] (rows=348467716 width=135)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col7)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                                Select Operator [SEL_175] (rows=348467716 width=135)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                  Merge Join Operator [MERGEJOIN_808] (rows=348467716 width=135)
                                                    Conds:RS_172._col1=RS_173._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                                  <-Map 66 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_173]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_168] (rows=80000000 width=860)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                        Filter Operator [FIL_753] (rows=80000000 width=860)
                                                          predicate:(c_customer_sk is not null and c_customer_id is not null)
                                                           Please refer to the previous TableScan [TS_6]
                                                  <-Reducer 42 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_172]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_807] (rows=316788826 width=135)
                                                        Conds:RS_169._col0=RS_170._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5"]
                                                      <-Map 29 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_170]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_165] (rows=36524 width=1119)
                                                            Output:["_col0"]
                                                            Filter Operator [FIL_752] (rows=36524 width=1119)
                                                              predicate:((d_year = 2001) and d_date_sk is not null)
                                                               Please refer to the previous TableScan [TS_3]
                                                      <-Map 67 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_169]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_162] (rows=287989836 width=135)
                                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                            Filter Operator [FIL_751] (rows=287989836 width=135)
                                                              predicate:(cs_bill_customer_sk is not null and cs_sold_date_sk is not null)
                                                               Please refer to the previous TableScan [TS_22]
                                <-Reducer 47 [CONTAINS]
                                  Reduce Output Operator [RS_340]
                                    PartitionCols:_col0
                                    Select Operator [SEL_205] (rows=1 width=162)
                                      Output:["_col0","_col1"]
                                      Filter Operator [FIL_204] (rows=1 width=162)
                                        predicate:(_col8 > 0)
                                        Select Operator [SEL_785] (rows=1 width=162)
                                          Output:["_col0","_col8"]
                                          Group By Operator [GBY_203] (rows=1 width=162)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                          <-Reducer 46 [SIMPLE_EDGE]
                                            SHUFFLE [RS_202]
                                              PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                              Group By Operator [GBY_201] (rows=1 width=162)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                                Select Operator [SEL_199] (rows=1 width=162)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                                  Merge Join Operator [MERGEJOIN_810] (rows=1 width=162)
                                                    Conds:RS_196._col1=RS_197._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                                  <-Map 66 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_197]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_192] (rows=1 width=860)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                        Filter Operator [FIL_756] (rows=1 width=860)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_6]
                                                  <-Reducer 45 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_196]
                                                      PartitionCols:_col1
                                                      Merge Join Operator [MERGEJOIN_809] (rows=1 width=148)
                                                        Conds:RS_193._col0=RS_194._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                                      <-Map 29 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_194]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_189] (rows=1 width=1119)
                                                            Output:["_col0","_col1"]
                                                            Filter Operator [FIL_755] (rows=1 width=1119)
                                                              predicate:false
                                                               Please refer to the previous TableScan [TS_3]
                                                      <-Map 68 [SIMPLE_EDGE]
                                                        SHUFFLE [RS_193]
                                                          PartitionCols:_col0
                                                          Select Operator [SEL_186] (rows=1 width=135)
                                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                            Filter Operator [FIL_754] (rows=1 width=135)
                                                              predicate:false
                                                               Please refer to the previous TableScan [TS_46]
                              <-Union 20 [SIMPLE_EDGE]
                                <-Reducer 19 [CONTAINS]
                                  Reduce Output Operator [RS_341]
                                    PartitionCols:_col0
                                    Select Operator [SEL_227] (rows=1 width=105)
                                      Output:["_col0","_col1"]
                                      Group By Operator [GBY_226] (rows=1 width=105)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                      <-Reducer 18 [SIMPLE_EDGE]
                                        SHUFFLE [RS_225]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                          Group By Operator [GBY_224] (rows=1 width=105)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                            Select Operator [SEL_222] (rows=1 width=105)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                              Merge Join Operator [MERGEJOIN_812] (rows=1 width=105)
                                                Conds:RS_219._col1=RS_220._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                              <-Map 66 [SIMPLE_EDGE]
                                                SHUFFLE [RS_220]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_215] (rows=1 width=860)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                    Filter Operator [FIL_759] (rows=1 width=860)
                                                      predicate:false
                                                       Please refer to the previous TableScan [TS_6]
                                              <-Reducer 17 [SIMPLE_EDGE]
                                                SHUFFLE [RS_219]
                                                  PartitionCols:_col1
                                                  Merge Join Operator [MERGEJOIN_811] (rows=1 width=96)
                                                    Conds:RS_216._col0=RS_217._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                                  <-Map 29 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_217]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_212] (rows=1 width=1119)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_758] (rows=1 width=1119)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Map 1 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_216]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_209] (rows=1 width=88)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                        Filter Operator [FIL_757] (rows=1 width=88)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_0]
                                <-Reducer 50 [CONTAINS]
                                  Reduce Output Operator [RS_341]
                                    PartitionCols:_col0
                                    Select Operator [SEL_248] (rows=174233858 width=135)
                                      Output:["_col0","_col1"]
                                      Group By Operator [GBY_247] (rows=174233858 width=135)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6
                                      <-Reducer 49 [SIMPLE_EDGE]
                                        SHUFFLE [RS_246]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                          Group By Operator [GBY_245] (rows=348467716 width=135)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col7)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                            Select Operator [SEL_243] (rows=348467716 width=135)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                              Merge Join Operator [MERGEJOIN_814] (rows=348467716 width=135)
                                                Conds:RS_240._col1=RS_241._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                              <-Map 66 [SIMPLE_EDGE]
                                                SHUFFLE [RS_241]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_236] (rows=80000000 width=860)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                    Filter Operator [FIL_762] (rows=80000000 width=860)
                                                      predicate:(c_customer_sk is not null and c_customer_id is not null)
                                                       Please refer to the previous TableScan [TS_6]
                                              <-Reducer 48 [SIMPLE_EDGE]
                                                SHUFFLE [RS_240]
                                                  PartitionCols:_col1
                                                  Merge Join Operator [MERGEJOIN_813] (rows=316788826 width=135)
                                                    Conds:RS_237._col0=RS_238._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5"]
                                                  <-Map 29 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_238]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_233] (rows=36524 width=1119)
                                                        Output:["_col0"]
                                                        Filter Operator [FIL_761] (rows=36524 width=1119)
                                                          predicate:((d_year = 2002) and d_date_sk is not null)
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Map 67 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_237]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_230] (rows=287989836 width=135)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                        Filter Operator [FIL_760] (rows=287989836 width=135)
                                                          predicate:(cs_bill_customer_sk is not null and cs_sold_date_sk is not null)
                                                           Please refer to the previous TableScan [TS_22]
                                <-Reducer 53 [CONTAINS]
                                  Reduce Output Operator [RS_341]
                                    PartitionCols:_col0
                                    Select Operator [SEL_271] (rows=1 width=162)
                                      Output:["_col0","_col1"]
                                      Group By Operator [GBY_270] (rows=1 width=162)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                      <-Reducer 52 [SIMPLE_EDGE]
                                        SHUFFLE [RS_269]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                          Group By Operator [GBY_268] (rows=1 width=162)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                            Select Operator [SEL_266] (rows=1 width=162)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                              Merge Join Operator [MERGEJOIN_816] (rows=1 width=162)
                                                Conds:RS_263._col1=RS_264._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                              <-Map 66 [SIMPLE_EDGE]
                                                SHUFFLE [RS_264]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_259] (rows=1 width=860)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                    Filter Operator [FIL_765] (rows=1 width=860)
                                                      predicate:false
                                                       Please refer to the previous TableScan [TS_6]
                                              <-Reducer 51 [SIMPLE_EDGE]
                                                SHUFFLE [RS_263]
                                                  PartitionCols:_col1
                                                  Merge Join Operator [MERGEJOIN_815] (rows=1 width=148)
                                                    Conds:RS_260._col0=RS_261._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                                  <-Map 29 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_261]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_256] (rows=1 width=1119)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_764] (rows=1 width=1119)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Map 68 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_260]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_253] (rows=1 width=135)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                        Filter Operator [FIL_763] (rows=1 width=135)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_46]
                              <-Union 24 [SIMPLE_EDGE]
                                <-Reducer 23 [CONTAINS]
                                  Reduce Output Operator [RS_342]
                                    PartitionCols:_col0
                                    Select Operator [SEL_293] (rows=348477374 width=88)
                                      Output:["_col0","_col1","_col2"]
                                      Group By Operator [GBY_292] (rows=348477374 width=88)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6
                                      <-Reducer 22 [SIMPLE_EDGE]
                                        SHUFFLE [RS_291]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                          Group By Operator [GBY_290] (rows=696954748 width=88)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col7)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                            Select Operator [SEL_288] (rows=696954748 width=88)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                              Merge Join Operator [MERGEJOIN_818] (rows=696954748 width=88)
                                                Conds:RS_285._col1=RS_286._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                              <-Map 66 [SIMPLE_EDGE]
                                                SHUFFLE [RS_286]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_281] (rows=80000000 width=860)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                    Filter Operator [FIL_768] (rows=80000000 width=860)
                                                      predicate:(c_customer_sk is not null and c_customer_id is not null)
                                                       Please refer to the previous TableScan [TS_6]
                                              <-Reducer 21 [SIMPLE_EDGE]
                                                SHUFFLE [RS_285]
                                                  PartitionCols:_col1
                                                  Merge Join Operator [MERGEJOIN_817] (rows=633595212 width=88)
                                                    Conds:RS_282._col0=RS_283._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5"]
                                                  <-Map 29 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_283]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_278] (rows=36524 width=1119)
                                                        Output:["_col0"]
                                                        Filter Operator [FIL_767] (rows=36524 width=1119)
                                                          predicate:((d_year = 2002) and d_date_sk is not null)
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Map 1 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_282]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_275] (rows=575995635 width=88)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                        Filter Operator [FIL_766] (rows=575995635 width=88)
                                                          predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                           Please refer to the previous TableScan [TS_0]
                                <-Reducer 56 [CONTAINS]
                                  Reduce Output Operator [RS_342]
                                    PartitionCols:_col0
                                    Select Operator [SEL_314] (rows=1 width=162)
                                      Output:["_col0","_col1","_col2"]
                                      Group By Operator [GBY_313] (rows=1 width=162)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                      <-Reducer 55 [SIMPLE_EDGE]
                                        SHUFFLE [RS_312]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                          Group By Operator [GBY_311] (rows=1 width=162)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                            Select Operator [SEL_309] (rows=1 width=162)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                              Merge Join Operator [MERGEJOIN_820] (rows=1 width=162)
                                                Conds:RS_306._col1=RS_307._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                              <-Map 66 [SIMPLE_EDGE]
                                                SHUFFLE [RS_307]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_302] (rows=1 width=860)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                    Filter Operator [FIL_771] (rows=1 width=860)
                                                      predicate:false
                                                       Please refer to the previous TableScan [TS_6]
                                              <-Reducer 54 [SIMPLE_EDGE]
                                                SHUFFLE [RS_306]
                                                  PartitionCols:_col1
                                                  Merge Join Operator [MERGEJOIN_819] (rows=1 width=148)
                                                    Conds:RS_303._col0=RS_304._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                                  <-Map 29 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_304]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_299] (rows=1 width=1119)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_770] (rows=1 width=1119)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Map 67 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_303]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_296] (rows=1 width=135)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                        Filter Operator [FIL_769] (rows=1 width=135)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_22]
                                <-Reducer 59 [CONTAINS]
                                  Reduce Output Operator [RS_342]
                                    PartitionCols:_col0
                                    Select Operator [SEL_337] (rows=1 width=162)
                                      Output:["_col0","_col1","_col2"]
                                      Group By Operator [GBY_336] (rows=1 width=162)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                      <-Reducer 58 [SIMPLE_EDGE]
                                        SHUFFLE [RS_335]
                                          PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                          Group By Operator [GBY_334] (rows=1 width=162)
                                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                            Select Operator [SEL_332] (rows=1 width=162)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                              Merge Join Operator [MERGEJOIN_822] (rows=1 width=162)
                                                Conds:RS_329._col1=RS_330._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                              <-Map 66 [SIMPLE_EDGE]
                                                SHUFFLE [RS_330]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_325] (rows=1 width=860)
                                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                                    Filter Operator [FIL_774] (rows=1 width=860)
                                                      predicate:false
                                                       Please refer to the previous TableScan [TS_6]
                                              <-Reducer 57 [SIMPLE_EDGE]
                                                SHUFFLE [RS_329]
                                                  PartitionCols:_col1
                                                  Merge Join Operator [MERGEJOIN_821] (rows=1 width=148)
                                                    Conds:RS_326._col0=RS_327._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                                  <-Map 29 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_327]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_322] (rows=1 width=1119)
                                                        Output:["_col0","_col1"]
                                                        Filter Operator [FIL_773] (rows=1 width=1119)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_3]
                                                  <-Map 68 [SIMPLE_EDGE]
                                                    SHUFFLE [RS_326]
                                                      PartitionCols:_col0
                                                      Select Operator [SEL_319] (rows=1 width=135)
                                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                        Filter Operator [FIL_772] (rows=1 width=135)
                                                          predicate:false
                                                           Please refer to the previous TableScan [TS_46]
                    <-Union 28 [SIMPLE_EDGE]
                      <-Reducer 27 [CONTAINS]
                        Reduce Output Operator [RS_415]
                          PartitionCols:_col0
                          Select Operator [SEL_367] (rows=1 width=105)
                            Output:["_col0","_col1"]
                            Group By Operator [GBY_366] (rows=1 width=105)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                            <-Reducer 26 [SIMPLE_EDGE]
                              SHUFFLE [RS_365]
                                PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                Group By Operator [GBY_364] (rows=1 width=105)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                  Select Operator [SEL_362] (rows=1 width=105)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                    Merge Join Operator [MERGEJOIN_824] (rows=1 width=105)
                                      Conds:RS_359._col1=RS_360._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                    <-Map 66 [SIMPLE_EDGE]
                                      SHUFFLE [RS_360]
                                        PartitionCols:_col0
                                        Select Operator [SEL_355] (rows=1 width=860)
                                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                          Filter Operator [FIL_777] (rows=1 width=860)
                                            predicate:false
                                             Please refer to the previous TableScan [TS_6]
                                    <-Reducer 25 [SIMPLE_EDGE]
                                      SHUFFLE [RS_359]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_823] (rows=1 width=96)
                                          Conds:RS_356._col0=RS_357._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                        <-Map 29 [SIMPLE_EDGE]
                                          SHUFFLE [RS_357]
                                            PartitionCols:_col0
                                            Select Operator [SEL_352] (rows=1 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_776] (rows=1 width=1119)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 1 [SIMPLE_EDGE]
                                          SHUFFLE [RS_356]
                                            PartitionCols:_col0
                                            Select Operator [SEL_349] (rows=1 width=88)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                              Filter Operator [FIL_775] (rows=1 width=88)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_0]
                      <-Reducer 62 [CONTAINS]
                        Reduce Output Operator [RS_415]
                          PartitionCols:_col0
                          Select Operator [SEL_388] (rows=1 width=162)
                            Output:["_col0","_col1"]
                            Group By Operator [GBY_387] (rows=1 width=162)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                            <-Reducer 61 [SIMPLE_EDGE]
                              SHUFFLE [RS_386]
                                PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                Group By Operator [GBY_385] (rows=1 width=162)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                  Select Operator [SEL_383] (rows=1 width=162)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                    Merge Join Operator [MERGEJOIN_826] (rows=1 width=162)
                                      Conds:RS_380._col1=RS_381._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                    <-Map 66 [SIMPLE_EDGE]
                                      SHUFFLE [RS_381]
                                        PartitionCols:_col0
                                        Select Operator [SEL_376] (rows=1 width=860)
                                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                          Filter Operator [FIL_780] (rows=1 width=860)
                                            predicate:false
                                             Please refer to the previous TableScan [TS_6]
                                    <-Reducer 60 [SIMPLE_EDGE]
                                      SHUFFLE [RS_380]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_825] (rows=1 width=148)
                                          Conds:RS_377._col0=RS_378._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                        <-Map 29 [SIMPLE_EDGE]
                                          SHUFFLE [RS_378]
                                            PartitionCols:_col0
                                            Select Operator [SEL_373] (rows=1 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_779] (rows=1 width=1119)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 67 [SIMPLE_EDGE]
                                          SHUFFLE [RS_377]
                                            PartitionCols:_col0
                                            Select Operator [SEL_370] (rows=1 width=135)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                              Filter Operator [FIL_778] (rows=1 width=135)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_22]
                      <-Reducer 65 [CONTAINS]
                        Reduce Output Operator [RS_415]
                          PartitionCols:_col0
                          Select Operator [SEL_411] (rows=87121617 width=135)
                            Output:["_col0","_col1"]
                            Group By Operator [GBY_410] (rows=87121617 width=135)
                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6
                            <-Reducer 64 [SIMPLE_EDGE]
                              SHUFFLE [RS_409]
                                PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                Group By Operator [GBY_408] (rows=174243235 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col7)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                  Select Operator [SEL_406] (rows=174243235 width=135)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                    Merge Join Operator [MERGEJOIN_828] (rows=174243235 width=135)
                                      Conds:RS_403._col1=RS_404._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                    <-Map 66 [SIMPLE_EDGE]
                                      SHUFFLE [RS_404]
                                        PartitionCols:_col0
                                        Select Operator [SEL_399] (rows=80000000 width=860)
                                          Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                          Filter Operator [FIL_783] (rows=80000000 width=860)
                                            predicate:(c_customer_sk is not null and c_customer_id is not null)
                                             Please refer to the previous TableScan [TS_6]
                                    <-Reducer 63 [SIMPLE_EDGE]
                                      SHUFFLE [RS_403]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_827] (rows=158402938 width=135)
                                          Conds:RS_400._col0=RS_401._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5"]
                                        <-Map 29 [SIMPLE_EDGE]
                                          SHUFFLE [RS_401]
                                            PartitionCols:_col0
                                            Select Operator [SEL_396] (rows=36524 width=1119)
                                              Output:["_col0"]
                                              Filter Operator [FIL_782] (rows=36524 width=1119)
                                                predicate:((d_year = 2002) and d_date_sk is not null)
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 68 [SIMPLE_EDGE]
                                          SHUFFLE [RS_400]
                                            PartitionCols:_col0
                                            Select Operator [SEL_393] (rows=144002668 width=135)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                              Filter Operator [FIL_781] (rows=144002668 width=135)
                                                predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                                 Please refer to the previous TableScan [TS_46]
                    <-Union 5 [SIMPLE_EDGE]
                      <-Reducer 32 [CONTAINS]
                        Reduce Output Operator [RS_413]
                          PartitionCols:_col0
                          Select Operator [SEL_43] (rows=1 width=162)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_42] (rows=1 width=162)
                              predicate:(_col8 > 0)
                              Select Operator [SEL_786] (rows=1 width=162)
                                Output:["_col0","_col8"]
                                Group By Operator [GBY_41] (rows=1 width=162)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                <-Reducer 31 [SIMPLE_EDGE]
                                  SHUFFLE [RS_40]
                                    PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                    Group By Operator [GBY_39] (rows=1 width=162)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                      Select Operator [SEL_37] (rows=1 width=162)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                        Merge Join Operator [MERGEJOIN_796] (rows=1 width=162)
                                          Conds:RS_34._col1=RS_35._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                        <-Map 66 [SIMPLE_EDGE]
                                          SHUFFLE [RS_35]
                                            PartitionCols:_col0
                                            Select Operator [SEL_30] (rows=1 width=860)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                              Filter Operator [FIL_735] (rows=1 width=860)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_6]
                                        <-Reducer 30 [SIMPLE_EDGE]
                                          SHUFFLE [RS_34]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_795] (rows=1 width=148)
                                              Conds:RS_31._col0=RS_32._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                            <-Map 29 [SIMPLE_EDGE]
                                              SHUFFLE [RS_32]
                                                PartitionCols:_col0
                                                Select Operator [SEL_27] (rows=1 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_734] (rows=1 width=1119)
                                                    predicate:false
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 67 [SIMPLE_EDGE]
                                              SHUFFLE [RS_31]
                                                PartitionCols:_col0
                                                Select Operator [SEL_24] (rows=1 width=135)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                  Filter Operator [FIL_733] (rows=1 width=135)
                                                    predicate:false
                                                     Please refer to the previous TableScan [TS_22]
                      <-Reducer 35 [CONTAINS]
                        Reduce Output Operator [RS_413]
                          PartitionCols:_col0
                          Select Operator [SEL_67] (rows=29040539 width=135)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_66] (rows=29040539 width=135)
                              predicate:(_col7 > 0)
                              Select Operator [SEL_787] (rows=87121617 width=135)
                                Output:["_col0","_col7"]
                                Group By Operator [GBY_65] (rows=87121617 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6
                                <-Reducer 34 [SIMPLE_EDGE]
                                  SHUFFLE [RS_64]
                                    PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                    Group By Operator [GBY_63] (rows=174243235 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"],aggregations:["sum(_col7)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6
                                      Select Operator [SEL_61] (rows=174243235 width=135)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                        Merge Join Operator [MERGEJOIN_798] (rows=174243235 width=135)
                                          Conds:RS_58._col1=RS_59._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                        <-Map 66 [SIMPLE_EDGE]
                                          SHUFFLE [RS_59]
                                            PartitionCols:_col0
                                            Select Operator [SEL_54] (rows=80000000 width=860)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                              Filter Operator [FIL_738] (rows=80000000 width=860)
                                                predicate:(c_customer_sk is not null and c_customer_id is not null)
                                                 Please refer to the previous TableScan [TS_6]
                                        <-Reducer 33 [SIMPLE_EDGE]
                                          SHUFFLE [RS_58]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_797] (rows=158402938 width=135)
                                              Conds:RS_55._col0=RS_56._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5"]
                                            <-Map 29 [SIMPLE_EDGE]
                                              SHUFFLE [RS_56]
                                                PartitionCols:_col0
                                                Select Operator [SEL_51] (rows=36524 width=1119)
                                                  Output:["_col0"]
                                                  Filter Operator [FIL_737] (rows=36524 width=1119)
                                                    predicate:((d_year = 2001) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 68 [SIMPLE_EDGE]
                                              SHUFFLE [RS_55]
                                                PartitionCols:_col0
                                                Select Operator [SEL_48] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                  Filter Operator [FIL_736] (rows=144002668 width=135)
                                                    predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_46]
                      <-Reducer 4 [CONTAINS]
                        Reduce Output Operator [RS_413]
                          PartitionCols:_col0
                          Select Operator [SEL_21] (rows=1 width=105)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_20] (rows=1 width=105)
                              predicate:(_col8 > 0)
                              Select Operator [SEL_792] (rows=1 width=105)
                                Output:["_col0","_col8"]
                                Group By Operator [GBY_19] (rows=1 width=105)
                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4, KEY._col5, KEY._col6, KEY._col7
                                <-Reducer 3 [SIMPLE_EDGE]
                                  SHUFFLE [RS_18]
                                    PartitionCols:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                    Group By Operator [GBY_17] (rows=1 width=105)
                                      Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"],aggregations:["sum(_col8)"],keys:_col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7
                                      Select Operator [SEL_15] (rows=1 width=105)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                        Merge Join Operator [MERGEJOIN_794] (rows=1 width=105)
                                          Conds:RS_12._col1=RS_13._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col7","_col9","_col10","_col11","_col12","_col13","_col14","_col15"]
                                        <-Map 66 [SIMPLE_EDGE]
                                          SHUFFLE [RS_13]
                                            PartitionCols:_col0
                                            Select Operator [SEL_8] (rows=1 width=860)
                                              Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                              Filter Operator [FIL_732] (rows=1 width=860)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_6]
                                        <-Reducer 2 [SIMPLE_EDGE]
                                          SHUFFLE [RS_12]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_793] (rows=1 width=96)
                                              Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
                                            <-Map 29 [SIMPLE_EDGE]
                                              SHUFFLE [RS_10]
                                                PartitionCols:_col0
                                                Select Operator [SEL_5] (rows=1 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_731] (rows=1 width=1119)
                                                    predicate:false
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 1 [SIMPLE_EDGE]
                                              SHUFFLE [RS_9]
                                                PartitionCols:_col0
                                                Select Operator [SEL_2] (rows=1 width=88)
                                                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                  Filter Operator [FIL_730] (rows=1 width=88)
                                                    predicate:false
                                                     Please refer to the previous TableScan [TS_0]

