PREHOOK: query: explain
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,max(ss_net_paid) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (2001,2001+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,max(ws_net_paid) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (2001,2001+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 2001
         and t_s_secyear.year = 2001+1
         and t_w_firstyear.year = 2001
         and t_w_secyear.year = 2001+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 2,1,3
limit 100
PREHOOK: type: QUERY
POSTHOOK: query: explain
with year_total as (
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,max(ss_net_paid) year_total
       ,'s' sale_type
 from customer
     ,store_sales
     ,date_dim
 where c_customer_sk = ss_customer_sk
   and ss_sold_date_sk = d_date_sk
   and d_year in (2001,2001+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
 union all
 select c_customer_id customer_id
       ,c_first_name customer_first_name
       ,c_last_name customer_last_name
       ,d_year as year
       ,max(ws_net_paid) year_total
       ,'w' sale_type
 from customer
     ,web_sales
     ,date_dim
 where c_customer_sk = ws_bill_customer_sk
   and ws_sold_date_sk = d_date_sk
   and d_year in (2001,2001+1)
 group by c_customer_id
         ,c_first_name
         ,c_last_name
         ,d_year
         )
  select 
        t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name
 from year_total t_s_firstyear
     ,year_total t_s_secyear
     ,year_total t_w_firstyear
     ,year_total t_w_secyear
 where t_s_secyear.customer_id = t_s_firstyear.customer_id
         and t_s_firstyear.customer_id = t_w_secyear.customer_id
         and t_s_firstyear.customer_id = t_w_firstyear.customer_id
         and t_s_firstyear.sale_type = 's'
         and t_w_firstyear.sale_type = 'w'
         and t_s_secyear.sale_type = 's'
         and t_w_secyear.sale_type = 'w'
         and t_s_firstyear.year = 2001
         and t_s_secyear.year = 2001+1
         and t_w_firstyear.year = 2001
         and t_w_secyear.year = 2001+1
         and t_s_firstyear.year_total > 0
         and t_w_firstyear.year_total > 0
         and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end
           > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end
 order by 2,1,3
limit 100
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 10 <- Reducer 9 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 12 <- Map 1 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 13 <- Map 33 (SIMPLE_EDGE), Reducer 12 (SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE), Union 15 (CONTAINS)
Reducer 16 <- Map 1 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 17 <- Map 33 (SIMPLE_EDGE), Reducer 16 (SIMPLE_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 21 <- Map 20 (SIMPLE_EDGE), Map 34 (SIMPLE_EDGE)
Reducer 22 <- Map 33 (SIMPLE_EDGE), Reducer 21 (SIMPLE_EDGE)
Reducer 23 <- Reducer 22 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 24 <- Map 20 (SIMPLE_EDGE), Map 34 (SIMPLE_EDGE)
Reducer 25 <- Map 33 (SIMPLE_EDGE), Reducer 24 (SIMPLE_EDGE)
Reducer 26 <- Reducer 25 (SIMPLE_EDGE), Union 11 (CONTAINS)
Reducer 27 <- Map 20 (SIMPLE_EDGE), Map 34 (SIMPLE_EDGE)
Reducer 28 <- Map 33 (SIMPLE_EDGE), Reducer 27 (SIMPLE_EDGE)
Reducer 29 <- Reducer 28 (SIMPLE_EDGE), Union 15 (CONTAINS)
Reducer 3 <- Map 33 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 30 <- Map 20 (SIMPLE_EDGE), Map 34 (SIMPLE_EDGE)
Reducer 31 <- Map 33 (SIMPLE_EDGE), Reducer 30 (SIMPLE_EDGE)
Reducer 32 <- Reducer 31 (SIMPLE_EDGE), Union 19 (CONTAINS)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE), Union 5 (CONTAINS)
Reducer 6 <- Union 11 (SIMPLE_EDGE), Union 15 (SIMPLE_EDGE), Union 19 (SIMPLE_EDGE), Union 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Map 1 (SIMPLE_EDGE), Map 20 (SIMPLE_EDGE)
Reducer 9 <- Map 33 (SIMPLE_EDGE), Reducer 8 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7
      File Output Operator [FS_187]
        Limit [LIM_186] (rows=100 width=88)
          Number of rows:100
          Select Operator [SEL_185] (rows=574987681 width=88)
            Output:["_col0","_col1","_col2"]
          <-Reducer 6 [SIMPLE_EDGE]
            SHUFFLE [RS_184]
              Select Operator [SEL_183] (rows=574987681 width=88)
                Output:["_col0","_col1","_col2"]
                Filter Operator [FIL_182] (rows=574987681 width=88)
                  predicate:CASE WHEN ((_col1 > 0)) THEN (CASE WHEN ((_col7 > 0)) THEN (((_col9 / _col7) > (_col5 / _col1))) ELSE ((null > (_col5 / _col1))) END) ELSE (CASE WHEN ((_col7 > 0)) THEN (((_col9 / _col7) > null)) ELSE (null) END) END
                  Select Operator [SEL_181] (rows=1149975362 width=88)
                    Output:["_col1","_col2","_col3","_col4","_col5","_col7","_col9"]
                    Merge Join Operator [MERGEJOIN_342] (rows=1149975362 width=88)
                      Conds:Union 5._col0=Union 11._col0(Inner),Union 5._col0=Union 15._col0(Inner),Union 5._col0=Union 19._col0(Inner),Output:["_col1","_col3","_col5","_col6","_col7","_col8","_col9"]
                    <-Union 11 [SIMPLE_EDGE]
                      <-Reducer 10 [CONTAINS]
                        Reduce Output Operator [RS_177]
                          PartitionCols:_col0
                          Select Operator [SEL_66] (rows=1 width=105)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_65] (rows=1 width=105)
                              predicate:(_col4 > 0)
                              Select Operator [SEL_64] (rows=1 width=105)
                                Output:["_col0","_col4"]
                                Group By Operator [GBY_63] (rows=1 width=105)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                                <-Reducer 9 [SIMPLE_EDGE]
                                  SHUFFLE [RS_62]
                                    PartitionCols:_col0, _col1, _col2, _col3
                                    Group By Operator [GBY_61] (rows=1 width=105)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(_col2)"],keys:_col6, _col4, _col7, _col8
                                      Select Operator [SEL_60] (rows=1 width=105)
                                        Output:["_col6","_col4","_col7","_col8","_col2"]
                                        Merge Join Operator [MERGEJOIN_331] (rows=1 width=105)
                                          Conds:RS_57._col1=RS_58._col0(Inner),Output:["_col2","_col4","_col6","_col7","_col8"]
                                        <-Map 33 [SIMPLE_EDGE]
                                          SHUFFLE [RS_58]
                                            PartitionCols:_col0
                                            Select Operator [SEL_53] (rows=1 width=860)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_308] (rows=1 width=860)
                                                predicate:false
                                                TableScan [TS_6] (rows=80000000 width=860)
                                                  default@customer,customer,Tbl:COMPLETE,Col:NONE,Output:["c_customer_sk","c_customer_id","c_first_name","c_last_name"]
                                        <-Reducer 8 [SIMPLE_EDGE]
                                          SHUFFLE [RS_57]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_330] (rows=1 width=96)
                                              Conds:RS_54._col0=RS_55._col0(Inner),Output:["_col1","_col2","_col4"]
                                            <-Map 20 [SIMPLE_EDGE]
                                              SHUFFLE [RS_55]
                                                PartitionCols:_col0
                                                Select Operator [SEL_50] (rows=1 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_307] (rows=1 width=1119)
                                                    predicate:false
                                                    TableScan [TS_3] (rows=73049 width=1119)
                                                      default@date_dim,date_dim,Tbl:COMPLETE,Col:NONE,Output:["d_date_sk","d_year"]
                                            <-Map 1 [SIMPLE_EDGE]
                                              SHUFFLE [RS_54]
                                                PartitionCols:_col0
                                                Select Operator [SEL_47] (rows=1 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_306] (rows=1 width=88)
                                                    predicate:false
                                                    TableScan [TS_0] (rows=575995635 width=88)
                                                      default@store_sales,store_sales,Tbl:COMPLETE,Col:NONE,Output:["ss_sold_date_sk","ss_customer_sk","ss_net_paid"]
                      <-Reducer 26 [CONTAINS]
                        Reduce Output Operator [RS_177]
                          PartitionCols:_col0
                          Select Operator [SEL_87] (rows=29040539 width=135)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_86] (rows=29040539 width=135)
                              predicate:(_col4 > 0)
                              Select Operator [SEL_324] (rows=87121617 width=135)
                                Output:["_col0","_col4"]
                                Group By Operator [GBY_85] (rows=87121617 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                                <-Reducer 25 [SIMPLE_EDGE]
                                  SHUFFLE [RS_84]
                                    PartitionCols:_col0, _col1, _col2, _col3
                                    Group By Operator [GBY_83] (rows=174243235 width=135)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(_col2)"],keys:_col6, _col7, _col8, _col4
                                      Select Operator [SEL_82] (rows=174243235 width=135)
                                        Output:["_col6","_col7","_col8","_col4","_col2"]
                                        Merge Join Operator [MERGEJOIN_333] (rows=174243235 width=135)
                                          Conds:RS_79._col1=RS_80._col0(Inner),Output:["_col2","_col4","_col6","_col7","_col8"]
                                        <-Map 33 [SIMPLE_EDGE]
                                          SHUFFLE [RS_80]
                                            PartitionCols:_col0
                                            Select Operator [SEL_75] (rows=80000000 width=860)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_311] (rows=80000000 width=860)
                                                predicate:(c_customer_sk is not null and c_customer_id is not null)
                                                 Please refer to the previous TableScan [TS_6]
                                        <-Reducer 24 [SIMPLE_EDGE]
                                          SHUFFLE [RS_79]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_332] (rows=158402938 width=135)
                                              Conds:RS_76._col0=RS_77._col0(Inner),Output:["_col1","_col2","_col4"]
                                            <-Map 20 [SIMPLE_EDGE]
                                              SHUFFLE [RS_77]
                                                PartitionCols:_col0
                                                Select Operator [SEL_72] (rows=18262 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_310] (rows=18262 width=1119)
                                                    predicate:((d_year) IN (2001, 2002) and (d_year = 2001) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 34 [SIMPLE_EDGE]
                                              SHUFFLE [RS_76]
                                                PartitionCols:_col0
                                                Select Operator [SEL_69] (rows=144002668 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_309] (rows=144002668 width=135)
                                                    predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                                    TableScan [TS_21] (rows=144002668 width=135)
                                                      default@web_sales,web_sales,Tbl:COMPLETE,Col:NONE,Output:["ws_sold_date_sk","ws_bill_customer_sk","ws_net_paid"]
                    <-Union 15 [SIMPLE_EDGE]
                      <-Reducer 14 [CONTAINS]
                        Reduce Output Operator [RS_178]
                          PartitionCols:_col0
                          Select Operator [SEL_109] (rows=1 width=105)
                            Output:["_col0","_col1"]
                            Group By Operator [GBY_108] (rows=1 width=105)
                              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                            <-Reducer 13 [SIMPLE_EDGE]
                              SHUFFLE [RS_107]
                                PartitionCols:_col0, _col1, _col2, _col3
                                Group By Operator [GBY_106] (rows=1 width=105)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(_col2)"],keys:_col6, _col4, _col7, _col8
                                  Select Operator [SEL_105] (rows=1 width=105)
                                    Output:["_col6","_col4","_col7","_col8","_col2"]
                                    Merge Join Operator [MERGEJOIN_335] (rows=1 width=105)
                                      Conds:RS_102._col1=RS_103._col0(Inner),Output:["_col2","_col4","_col6","_col7","_col8"]
                                    <-Map 33 [SIMPLE_EDGE]
                                      SHUFFLE [RS_103]
                                        PartitionCols:_col0
                                        Select Operator [SEL_98] (rows=1 width=860)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_314] (rows=1 width=860)
                                            predicate:false
                                             Please refer to the previous TableScan [TS_6]
                                    <-Reducer 12 [SIMPLE_EDGE]
                                      SHUFFLE [RS_102]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_334] (rows=1 width=96)
                                          Conds:RS_99._col0=RS_100._col0(Inner),Output:["_col1","_col2","_col4"]
                                        <-Map 20 [SIMPLE_EDGE]
                                          SHUFFLE [RS_100]
                                            PartitionCols:_col0
                                            Select Operator [SEL_95] (rows=1 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_313] (rows=1 width=1119)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 1 [SIMPLE_EDGE]
                                          SHUFFLE [RS_99]
                                            PartitionCols:_col0
                                            Select Operator [SEL_92] (rows=1 width=88)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_312] (rows=1 width=88)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_0]
                      <-Reducer 29 [CONTAINS]
                        Reduce Output Operator [RS_178]
                          PartitionCols:_col0
                          Select Operator [SEL_130] (rows=87121617 width=135)
                            Output:["_col0","_col1"]
                            Group By Operator [GBY_129] (rows=87121617 width=135)
                              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                            <-Reducer 28 [SIMPLE_EDGE]
                              SHUFFLE [RS_128]
                                PartitionCols:_col0, _col1, _col2, _col3
                                Group By Operator [GBY_127] (rows=174243235 width=135)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(_col2)"],keys:_col6, _col7, _col8, _col4
                                  Select Operator [SEL_126] (rows=174243235 width=135)
                                    Output:["_col6","_col7","_col8","_col4","_col2"]
                                    Merge Join Operator [MERGEJOIN_337] (rows=174243235 width=135)
                                      Conds:RS_123._col1=RS_124._col0(Inner),Output:["_col2","_col4","_col6","_col7","_col8"]
                                    <-Map 33 [SIMPLE_EDGE]
                                      SHUFFLE [RS_124]
                                        PartitionCols:_col0
                                        Select Operator [SEL_119] (rows=80000000 width=860)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_317] (rows=80000000 width=860)
                                            predicate:(c_customer_sk is not null and c_customer_id is not null)
                                             Please refer to the previous TableScan [TS_6]
                                    <-Reducer 27 [SIMPLE_EDGE]
                                      SHUFFLE [RS_123]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_336] (rows=158402938 width=135)
                                          Conds:RS_120._col0=RS_121._col0(Inner),Output:["_col1","_col2","_col4"]
                                        <-Map 20 [SIMPLE_EDGE]
                                          SHUFFLE [RS_121]
                                            PartitionCols:_col0
                                            Select Operator [SEL_116] (rows=18262 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_316] (rows=18262 width=1119)
                                                predicate:((d_year) IN (2001, 2002) and (d_year = 2002) and d_date_sk is not null)
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 34 [SIMPLE_EDGE]
                                          SHUFFLE [RS_120]
                                            PartitionCols:_col0
                                            Select Operator [SEL_113] (rows=144002668 width=135)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_315] (rows=144002668 width=135)
                                                predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                                 Please refer to the previous TableScan [TS_21]
                    <-Union 19 [SIMPLE_EDGE]
                      <-Reducer 18 [CONTAINS]
                        Reduce Output Operator [RS_179]
                          PartitionCols:_col0
                          Select Operator [SEL_152] (rows=348477374 width=88)
                            Output:["_col0","_col1","_col2","_col3"]
                            Group By Operator [GBY_151] (rows=348477374 width=88)
                              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                            <-Reducer 17 [SIMPLE_EDGE]
                              SHUFFLE [RS_150]
                                PartitionCols:_col0, _col1, _col2, _col3
                                Group By Operator [GBY_149] (rows=696954748 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(_col2)"],keys:_col6, _col7, _col8, _col4
                                  Select Operator [SEL_148] (rows=696954748 width=88)
                                    Output:["_col6","_col7","_col8","_col4","_col2"]
                                    Merge Join Operator [MERGEJOIN_339] (rows=696954748 width=88)
                                      Conds:RS_145._col1=RS_146._col0(Inner),Output:["_col2","_col4","_col6","_col7","_col8"]
                                    <-Map 33 [SIMPLE_EDGE]
                                      SHUFFLE [RS_146]
                                        PartitionCols:_col0
                                        Select Operator [SEL_141] (rows=80000000 width=860)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_320] (rows=80000000 width=860)
                                            predicate:(c_customer_sk is not null and c_customer_id is not null)
                                             Please refer to the previous TableScan [TS_6]
                                    <-Reducer 16 [SIMPLE_EDGE]
                                      SHUFFLE [RS_145]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_338] (rows=633595212 width=88)
                                          Conds:RS_142._col0=RS_143._col0(Inner),Output:["_col1","_col2","_col4"]
                                        <-Map 20 [SIMPLE_EDGE]
                                          SHUFFLE [RS_143]
                                            PartitionCols:_col0
                                            Select Operator [SEL_138] (rows=18262 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_319] (rows=18262 width=1119)
                                                predicate:((d_year) IN (2001, 2002) and (d_year = 2002) and d_date_sk is not null)
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 1 [SIMPLE_EDGE]
                                          SHUFFLE [RS_142]
                                            PartitionCols:_col0
                                            Select Operator [SEL_135] (rows=575995635 width=88)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_318] (rows=575995635 width=88)
                                                predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                 Please refer to the previous TableScan [TS_0]
                      <-Reducer 32 [CONTAINS]
                        Reduce Output Operator [RS_179]
                          PartitionCols:_col0
                          Select Operator [SEL_172] (rows=1 width=162)
                            Output:["_col0","_col1","_col2","_col3"]
                            Group By Operator [GBY_171] (rows=1 width=162)
                              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                            <-Reducer 31 [SIMPLE_EDGE]
                              SHUFFLE [RS_170]
                                PartitionCols:_col0, _col1, _col2, _col3
                                Group By Operator [GBY_169] (rows=1 width=162)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(_col2)"],keys:_col6, _col4, _col7, _col8
                                  Select Operator [SEL_168] (rows=1 width=162)
                                    Output:["_col6","_col4","_col7","_col8","_col2"]
                                    Merge Join Operator [MERGEJOIN_341] (rows=1 width=162)
                                      Conds:RS_165._col1=RS_166._col0(Inner),Output:["_col2","_col4","_col6","_col7","_col8"]
                                    <-Map 33 [SIMPLE_EDGE]
                                      SHUFFLE [RS_166]
                                        PartitionCols:_col0
                                        Select Operator [SEL_161] (rows=1 width=860)
                                          Output:["_col0","_col1","_col2","_col3"]
                                          Filter Operator [FIL_323] (rows=1 width=860)
                                            predicate:false
                                             Please refer to the previous TableScan [TS_6]
                                    <-Reducer 30 [SIMPLE_EDGE]
                                      SHUFFLE [RS_165]
                                        PartitionCols:_col1
                                        Merge Join Operator [MERGEJOIN_340] (rows=1 width=148)
                                          Conds:RS_162._col0=RS_163._col0(Inner),Output:["_col1","_col2","_col4"]
                                        <-Map 20 [SIMPLE_EDGE]
                                          SHUFFLE [RS_163]
                                            PartitionCols:_col0
                                            Select Operator [SEL_158] (rows=1 width=1119)
                                              Output:["_col0","_col1"]
                                              Filter Operator [FIL_322] (rows=1 width=1119)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_3]
                                        <-Map 34 [SIMPLE_EDGE]
                                          SHUFFLE [RS_162]
                                            PartitionCols:_col0
                                            Select Operator [SEL_155] (rows=1 width=135)
                                              Output:["_col0","_col1","_col2"]
                                              Filter Operator [FIL_321] (rows=1 width=135)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_21]
                    <-Union 5 [SIMPLE_EDGE]
                      <-Reducer 23 [CONTAINS]
                        Reduce Output Operator [RS_176]
                          PartitionCols:_col0
                          Select Operator [SEL_42] (rows=1 width=162)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_41] (rows=1 width=162)
                              predicate:(_col4 > 0)
                              Select Operator [SEL_40] (rows=1 width=162)
                                Output:["_col0","_col4"]
                                Group By Operator [GBY_39] (rows=1 width=162)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                                <-Reducer 22 [SIMPLE_EDGE]
                                  SHUFFLE [RS_38]
                                    PartitionCols:_col0, _col1, _col2, _col3
                                    Group By Operator [GBY_37] (rows=1 width=162)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(_col2)"],keys:_col6, _col4, _col7, _col8
                                      Select Operator [SEL_36] (rows=1 width=162)
                                        Output:["_col6","_col4","_col7","_col8","_col2"]
                                        Merge Join Operator [MERGEJOIN_329] (rows=1 width=162)
                                          Conds:RS_33._col1=RS_34._col0(Inner),Output:["_col2","_col4","_col6","_col7","_col8"]
                                        <-Map 33 [SIMPLE_EDGE]
                                          SHUFFLE [RS_34]
                                            PartitionCols:_col0
                                            Select Operator [SEL_29] (rows=1 width=860)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_305] (rows=1 width=860)
                                                predicate:false
                                                 Please refer to the previous TableScan [TS_6]
                                        <-Reducer 21 [SIMPLE_EDGE]
                                          SHUFFLE [RS_33]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_328] (rows=1 width=148)
                                              Conds:RS_30._col0=RS_31._col0(Inner),Output:["_col1","_col2","_col4"]
                                            <-Map 20 [SIMPLE_EDGE]
                                              SHUFFLE [RS_31]
                                                PartitionCols:_col0
                                                Select Operator [SEL_26] (rows=1 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_304] (rows=1 width=1119)
                                                    predicate:false
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 34 [SIMPLE_EDGE]
                                              SHUFFLE [RS_30]
                                                PartitionCols:_col0
                                                Select Operator [SEL_23] (rows=1 width=135)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_303] (rows=1 width=135)
                                                    predicate:false
                                                     Please refer to the previous TableScan [TS_21]
                      <-Reducer 4 [CONTAINS]
                        Reduce Output Operator [RS_176]
                          PartitionCols:_col0
                          Select Operator [SEL_20] (rows=116159124 width=88)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_19] (rows=116159124 width=88)
                              predicate:(_col4 > 0)
                              Select Operator [SEL_325] (rows=348477374 width=88)
                                Output:["_col0","_col4"]
                                Group By Operator [GBY_18] (rows=348477374 width=88)
                                  Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                                <-Reducer 3 [SIMPLE_EDGE]
                                  SHUFFLE [RS_17]
                                    PartitionCols:_col0, _col1, _col2, _col3
                                    Group By Operator [GBY_16] (rows=696954748 width=88)
                                      Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["max(_col2)"],keys:_col6, _col7, _col8, _col4
                                      Select Operator [SEL_15] (rows=696954748 width=88)
                                        Output:["_col6","_col7","_col8","_col4","_col2"]
                                        Merge Join Operator [MERGEJOIN_327] (rows=696954748 width=88)
                                          Conds:RS_12._col1=RS_13._col0(Inner),Output:["_col2","_col4","_col6","_col7","_col8"]
                                        <-Map 33 [SIMPLE_EDGE]
                                          SHUFFLE [RS_13]
                                            PartitionCols:_col0
                                            Select Operator [SEL_8] (rows=80000000 width=860)
                                              Output:["_col0","_col1","_col2","_col3"]
                                              Filter Operator [FIL_302] (rows=80000000 width=860)
                                                predicate:(c_customer_sk is not null and c_customer_id is not null)
                                                 Please refer to the previous TableScan [TS_6]
                                        <-Reducer 2 [SIMPLE_EDGE]
                                          SHUFFLE [RS_12]
                                            PartitionCols:_col1
                                            Merge Join Operator [MERGEJOIN_326] (rows=633595212 width=88)
                                              Conds:RS_9._col0=RS_10._col0(Inner),Output:["_col1","_col2","_col4"]
                                            <-Map 20 [SIMPLE_EDGE]
                                              SHUFFLE [RS_10]
                                                PartitionCols:_col0
                                                Select Operator [SEL_5] (rows=18262 width=1119)
                                                  Output:["_col0","_col1"]
                                                  Filter Operator [FIL_301] (rows=18262 width=1119)
                                                    predicate:((d_year) IN (2001, 2002) and (d_year = 2001) and d_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_3]
                                            <-Map 1 [SIMPLE_EDGE]
                                              SHUFFLE [RS_9]
                                                PartitionCols:_col0
                                                Select Operator [SEL_2] (rows=575995635 width=88)
                                                  Output:["_col0","_col1","_col2"]
                                                  Filter Operator [FIL_300] (rows=575995635 width=88)
                                                    predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                     Please refer to the previous TableScan [TS_0]

