PREHOOK: query: drop table if exists dummy
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists dummy
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table if exists partunion1
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table if exists partunion1
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table dummy(i int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@dummy
POSTHOOK: query: create table dummy(i int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@dummy
PREHOOK: query: insert into table dummy values (1)
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__1
PREHOOK: Output: default@dummy
POSTHOOK: query: insert into table dummy values (1)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__1
POSTHOOK: Output: default@dummy
POSTHOOK: Lineage: dummy.i EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: select * from dummy
PREHOOK: type: QUERY
PREHOOK: Input: default@dummy
#### A masked pattern was here ####
POSTHOOK: query: select * from dummy
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dummy
#### A masked pattern was here ####
1
PREHOOK: query: create table partunion1(id1 int) partitioned by (part1 string) stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@partunion1
POSTHOOK: query: create table partunion1(id1 int) partitioned by (part1 string) stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@partunion1
PREHOOK: query: explain insert into table partunion1 partition(part1)
select temps.* from (
select 1 as id1, '2014' as part1 from dummy 
union all 
select 2 as id1, '2014' as part1 from dummy ) temps
PREHOOK: type: QUERY
POSTHOOK: query: explain insert into table partunion1 partition(part1)
select temps.* from (
select 1 as id1, '2014' as part1 from dummy 
union all 
select 2 as id1, '2014' as part1 from dummy ) temps
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Union 2 (CONTAINS)
Map 3 <- Union 2 (CONTAINS)

Stage-3
  Stats-Aggr Operator
    Stage-0
      Move Operator
        table:{"name:":"default.partunion1"}
        Stage-2
          Dependency Collection{}
            Stage-5(CONDITIONAL)
              Move Operator
                Stage-8(CONDITIONAL CHILD TASKS: Stage-5, Stage-4, Stage-6)
                  Conditional Operator
                    Stage-1
                      Union 2
                      <-Map 1 [CONTAINS]
                        File Output Operator [FS_6]
                          table:{"name:":"default.partunion1"}
                          Select Operator [SEL_5] (rows=2 width=92)
                            Output:["_col0","_col1"]
                            Select Operator [SEL_1] (rows=1 width=4)
                              Output:["_col0"]
                              TableScan [TS_0] (rows=1 width=1)
                      <-Map 3 [CONTAINS]
                        File Output Operator [FS_6]
                          table:{"name:":"default.partunion1"}
                          Select Operator [SEL_5] (rows=2 width=92)
                            Output:["_col0","_col1"]
                            Select Operator [SEL_3] (rows=1 width=4)
                              Output:["_col0"]
                              TableScan [TS_2] (rows=1 width=1)
            Stage-4(CONDITIONAL)
              File Merge
                 Please refer to the previous Stage-8(CONDITIONAL CHILD TASKS: Stage-5, Stage-4, Stage-6)
            Stage-7
              Move Operator
                Stage-6(CONDITIONAL)
                  File Merge
                     Please refer to the previous Stage-8(CONDITIONAL CHILD TASKS: Stage-5, Stage-4, Stage-6)

PREHOOK: query: insert into table partunion1 partition(part1)
select 1 as id1, '2014' as part1 from dummy 
union all 
select 2 as id1, '2014' as part1 from dummy
PREHOOK: type: QUERY
PREHOOK: Input: default@dummy
PREHOOK: Output: default@partunion1
POSTHOOK: query: insert into table partunion1 partition(part1)
select 1 as id1, '2014' as part1 from dummy 
union all 
select 2 as id1, '2014' as part1 from dummy
POSTHOOK: type: QUERY
POSTHOOK: Input: default@dummy
POSTHOOK: Output: default@partunion1@part1=2014
POSTHOOK: Lineage: partunion1 PARTITION(part1=2014).id1 EXPRESSION []
PREHOOK: query: select * from partunion1
PREHOOK: type: QUERY
PREHOOK: Input: default@partunion1
PREHOOK: Input: default@partunion1@part1=2014
#### A masked pattern was here ####
POSTHOOK: query: select * from partunion1
POSTHOOK: type: QUERY
POSTHOOK: Input: default@partunion1
POSTHOOK: Input: default@partunion1@part1=2014
#### A masked pattern was here ####
1	2014
2	2014
PREHOOK: query: drop table dummy
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@dummy
PREHOOK: Output: default@dummy
POSTHOOK: query: drop table dummy
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@dummy
POSTHOOK: Output: default@dummy
PREHOOK: query: drop table partunion1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@partunion1
PREHOOK: Output: default@partunion1
POSTHOOK: query: drop table partunion1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@partunion1
POSTHOOK: Output: default@partunion1
