Warning: Map Join MAPJOIN[43][bigTable=?] in task 'Reducer 2' is a cross product
PREHOOK: query: explain
select * from (
  select count(*) as h8_30_to_9
  from src
  join src1 on src.key = src1.key
  where src1.value = "val_278") s1
join (
  select count(*) as h9_to_9_30
  from src
  join src1 on src.key = src1.key
  where src1.value = "val_255") s2
PREHOOK: type: QUERY
POSTHOOK: query: explain
select * from (
  select count(*) as h8_30_to_9
  from src
  join src1 on src.key = src1.key
  where src1.value = "val_278") s1
join (
  select count(*) as h9_to_9_30
  from src
  join src1 on src.key = src1.key
  where src1.value = "val_255") s2
POSTHOOK: type: QUERY
Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Reducer 3 (BROADCAST_EDGE)
Reducer 3 <- Map 1 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 2 vectorized
      File Output Operator [FS_51]
        Map Join Operator [MAPJOIN_50] (rows=1 width=17)
          Conds:(Inner),Output:["_col0","_col1"]
        <-Reducer 3 [BROADCAST_EDGE] vectorized
          BROADCAST [RS_48]
            Group By Operator [GBY_47] (rows=1 width=8)
              Output:["_col0"],aggregations:["count(VALUE._col0)"]
            <-Map 1 [SIMPLE_EDGE]
              SHUFFLE [RS_25]
                Group By Operator [GBY_24] (rows=1 width=8)
                  Output:["_col0"],aggregations:["count()"]
                  Map Join Operator [MAPJOIN_42] (rows=550 width=10)
                    Conds:SEL_2._col0=RS_21._col0(Inner),HybridGraceHashJoin:true
                  <-Map 5 [BROADCAST_EDGE]
                    BROADCAST [RS_21]
                      PartitionCols:_col0
                      Select Operator [SEL_19] (rows=12 width=7)
                        Output:["_col0"]
                        Filter Operator [FIL_40] (rows=12 width=7)
                          predicate:((value = 'val_255') and key is not null)
                          TableScan [TS_17] (rows=25 width=7)
                            default@src1,src1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
                  <-Select Operator [SEL_2] (rows=500 width=10)
                      Output:["_col0"]
                      Filter Operator [FIL_37] (rows=500 width=10)
                        predicate:key is not null
                        TableScan [TS_0] (rows=500 width=10)
                          default@src,src,Tbl:COMPLETE,Col:NONE,Output:["key"]
                        <-Map 4 [BROADCAST_EDGE]
                          BROADCAST [RS_7]
                            PartitionCols:_col0
                            Select Operator [SEL_5] (rows=12 width=7)
                              Output:["_col0"]
                              Filter Operator [FIL_38] (rows=12 width=7)
                                predicate:((value = 'val_278') and key is not null)
                                TableScan [TS_3] (rows=25 width=7)
                                  default@src1,src1,Tbl:COMPLETE,Col:NONE,Output:["key","value"]
        <-Group By Operator [GBY_49] (rows=1 width=8)
            Output:["_col0"],aggregations:["count(VALUE._col0)"]
          <-Map 1 [SIMPLE_EDGE]
            SHUFFLE [RS_11]
              Group By Operator [GBY_10] (rows=1 width=8)
                Output:["_col0"],aggregations:["count()"]
                Map Join Operator [MAPJOIN_41] (rows=550 width=10)
                  Conds:SEL_2._col0=RS_7._col0(Inner),HybridGraceHashJoin:true
                <- Please refer to the previous Map 4 [BROADCAST_EDGE]
                   Please refer to the previous Select Operator [SEL_2]

Warning: Map Join MAPJOIN[43][bigTable=?] in task 'Reducer 2' is a cross product
PREHOOK: query: select * from (
  select count(*) as h8_30_to_9
  from src
  join src1 on src.key = src1.key
  where src1.value = "val_278") s1
join (
  select count(*) as h9_to_9_30
  from src
  join src1 on src.key = src1.key
  where src1.value = "val_255") s2
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Input: default@src1
#### A masked pattern was here ####
POSTHOOK: query: select * from (
  select count(*) as h8_30_to_9
  from src
  join src1 on src.key = src1.key
  where src1.value = "val_278") s1
join (
  select count(*) as h9_to_9_30
  from src
  join src1 on src.key = src1.key
  where src1.value = "val_255") s2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Input: default@src1
#### A masked pattern was here ####
2	2
